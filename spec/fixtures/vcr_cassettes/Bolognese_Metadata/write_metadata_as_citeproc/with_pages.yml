---
http_interactions:
- request:
    method: get
    uri: http://www.crossref.org/openurl/?format=unixref&id=doi:10.1155/2012/291294&noredirect=true&pid=tech@datacite.org
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - https://github.com/datacite/maremma
      Accept:
      - text/xml
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Crossref-Deployment-Name:
      - cr6-1
      Content-Type:
      - text/xml;charset=UTF-8
      Content-Language:
      - en-US
      Date:
      - Thu, 15 Feb 2018 06:33:49 GMT
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 15 Feb 2018 06:33:50 GMT
recorded_with: VCR 3.0.3
