---
http_interactions:
- request:
    method: get
    uri: https://blog.datacite.org/eating-your-own-dog-food
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - https://github.com/datacite/maremma
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Access-Control-Allow-Methods:
      - GET, POST, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Sat, 05 Aug 2017 13:25:57 GMT
      Location:
      - "/eating-your-own-dog-food/"
      Server:
      - openresty/1.11.2.2
      Via:
      - kong/0.10.3
      X-Amz-Error-Code:
      - Found
      X-Amz-Error-Message:
      - Resource Found
      X-Amz-Id-2:
      - doqFKxEFBT618aGPcF9LUfRNJIUKWraAuU3Ivil2fWgcpmC1XM3byZ9/LnSUZhuFCoAaI+pk0wc=
      X-Amz-Request-Id:
      - CF35AEABCC2B3AD9
      X-Kong-Proxy-Latency:
      - '0'
      X-Kong-Upstream-Latency:
      - '70'
      Content-Length:
      - '313'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: |
        <html>
        <head><title>302 Moved Temporarily</title></head>
        <body>
        <h1>302 Moved Temporarily</h1>
        <ul>
        <li>Code: Found</li>
        <li>Message: Resource Found</li>
        <li>RequestId: CF35AEABCC2B3AD9</li>
        <li>HostId: doqFKxEFBT618aGPcF9LUfRNJIUKWraAuU3Ivil2fWgcpmC1XM3byZ9/LnSUZhuFCoAaI+pk0wc=</li>
        </ul>
        <hr/>
        </body>
        </html>
    http_version: 
  recorded_at: Sat, 05 Aug 2017 13:25:55 GMT
- request:
    method: get
    uri: https://blog.datacite.org/eating-your-own-dog-food/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - https://github.com/datacite/maremma
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Methods:
      - GET, POST, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Date:
      - Sat, 05 Aug 2017 13:25:57 GMT
      Etag:
      - '"c1ad6ae68fe8e26541d79b17d5ac0781"'
      Last-Modified:
      - Sat, 05 Aug 2017 02:53:26 GMT
      Server:
      - openresty/1.11.2.2
      Via:
      - kong/0.10.3
      X-Amz-Id-2:
      - vr+ufZ3hfHi5iVjzS2fsBseHFD7//l9NvWNKdxi3sn9U72VZaa2KMdEYAKIbKgVvbgTAGvgCkaI=
      X-Amz-Request-Id:
      - 58EF5CDFD8CEDB26
      X-Amz-Version-Id:
      - 5fomvZFLDB7wK0UHZav.h6uhlqYVWFS_
      X-Kong-Proxy-Latency:
      - '0'
      X-Kong-Upstream-Latency:
      - '133'
      Content-Length:
      - '23992'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 05 Aug 2017 13:25:56 GMT
recorded_with: VCR 3.0.3
