---
http_interactions:
- request:
    method: get
    uri: https://blog.datacite.org/eating-your-own-dog-food
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.1.1; +https://github.com/datacite/maremma)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '313'
      Connection:
      - keep-alive
      X-Amz-Error-Code:
      - Found
      X-Amz-Error-Message:
      - Resource Found
      Location:
      - "/eating-your-own-dog-food/"
      Date:
      - Thu, 06 Sep 2018 07:01:31 GMT
      Server:
      - AmazonS3
      Age:
      - '1267'
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 10e95c517e657ad53448fce5195e9cba.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - KwEHcnGziy1RXzAA82MJNqjSj5fmpA4qkXbpEvCXonQBs3nyV5zeig==
    body:
      encoding: ASCII-8BIT
      string: |
        <html>
        <head><title>302 Moved Temporarily</title></head>
        <body>
        <h1>302 Moved Temporarily</h1>
        <ul>
        <li>Code: Found</li>
        <li>Message: Resource Found</li>
        <li>RequestId: 378220AE44FF84CB</li>
        <li>HostId: Pcrc3wu8NTpAPw4R6aoPaFlUR6y9sGIVwUO8XQp8xxegptF8m1nj1UngfWbw+9ZWx4KgMWbbQlk=</li>
        </ul>
        <hr/>
        </body>
        </html>
    http_version: 
  recorded_at: Thu, 06 Sep 2018 07:22:39 GMT
- request:
    method: get
    uri: https://blog.datacite.org/eating-your-own-dog-food/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mozilla/5.0 (compatible; Maremma/4.1.1; +https://github.com/datacite/maremma)
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html
      Content-Length:
      - '23819'
      Connection:
      - keep-alive
      Date:
      - Thu, 06 Sep 2018 07:01:33 GMT
      Cache-Control:
      - max-age=31536000
      Last-Modified:
      - Wed, 05 Sep 2018 23:13:34 GMT
      Etag:
      - '"321133250372acae3f89220311b3eb2c"'
      Server:
      - AmazonS3
      Age:
      - '1267'
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f2cdeae9faa9c871a27c20811b04af58.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - fDutR0tEPDvMtdFhi0mMn3eItPC6_gUbFAjyXGtPreBCdWGQwGOpSw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CiAgPGh0bWw+CiAgICA8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDwhLS0gKDEpIE9wdGltaXplIGZvciBtb2JpbGUgdmVyc2lvbnM6IGh0dHA6Ly9nb28uZ2wvRU9wRmwgLS0+CiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCI+CiAgICA8IS0tICgxKSBmb3JjZSBsYXRlc3QgSUUgcmVuZGVyaW5nIGVuZ2luZTogYml0Lmx5LzFjOEVpQzkgLS0+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPgoKCiAgICA8dGl0bGU+RWF0aW5nIHlvdXIgb3duIERvZyBGb29kPC90aXRsZT4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJFYXRpbmcgeW91ciBvd24gZG9nIGZvb2QgaXMgYSBzbGFuZyB0ZXJtIHRvIGRlc2NyaWJlIHRoYXQgYW4gb3JnYW5pemF0aW9uIHNob3VsZCBpdHNlbGYgdXNlIHRoZSBwcm9kdWN0cyBhbmQgc2VydmljZXMgaXQgcHJvdmlkZXMuIEZvciBEYXRhQ2l0ZSB0aGlzIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIHVzZSBET0lzIHdpdGggYXBwcm9wcmlhdGUgbWV0YWRhdGEgYW5kIHN0cmF0ZWdpZXMgZm9yIGxvbmctdGVybSBwcmVzZXJ2YXRpb24gZm9yLi4uIiAvPgoKICAgIDxtZXRhIG5hbWU9IkhhbmRoZWxkRnJpZW5kbHkiIGNvbnRlbnQ9IlRydWUiIC8+CiAgICA8bWV0YSBuYW1lPSJNb2JpbGVPcHRpbWl6ZWQiIGNvbnRlbnQ9IjMyMCIgLz4KICAgIDxtZXRhIG5hbWU9ImFwcGxlLW1vYmlsZS13ZWItYXBwLWNhcGFibGUiIGNvbnRlbnQ9InllcyI+CiAgICA8bWV0YSBuYW1lPSJhcHBsZS1tb2JpbGUtd2ViLWFwcC1zdGF0dXMtYmFyLXN0eWxlIiBjb250ZW50PSJibGFjay10cmFuc2x1Y2VudCI+CgogICAgPCEtLSBEdWJsaW5Db3JlIE1ldGFkYXRhIC0tPgogICAgPG1ldGEgcHJvcGVydHk9ImRjOnRpdGxlIiBjb250ZW50PSJFYXRpbmcgeW91ciBvd24gRG9nIEZvb2QiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0iZGM6Zm9ybWF0IiBjb250ZW50PSJ0ZXh0L2h0bWwiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0iZGM6bGFuZ3VhZ2UiIGNvbnRlbnQ9ImVuIiAvPgogICAgPG1ldGEgcHJvcGVydHk9ImRjOnJpZ2h0cyIgY29udGVudD0iQ0MtQlkiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0iZGM6c291cmNlIiBjb250ZW50PSJEYXRhQ2l0ZSBCbG9nIiAvPgogICAgPG1ldGEgcHJvcGVydHk9ImRjOnN1YmplY3QiIGNvbnRlbnQ9IlNjaG9sYXJseSBDb21tdW5pY2F0aW9uIiAvPgogICAgPG1ldGEgcHJvcGVydHk9ImRjOnR5cGUiIGNvbnRlbnQ9IndlYnNpdGUiIC8+CgoKICAgIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9IkVhdGluZyB5b3VyIG93biBEb2cgRm9vZCIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzpkZXNjcmlwdGlvbiIgY29udGVudD0iRWF0aW5nIHlvdXIgb3duIGRvZyBmb29kIGlzIGEgc2xhbmcgdGVybSB0byBkZXNjcmliZSB0aGF0IGFuIG9yZ2FuaXphdGlvbiBzaG91bGQgaXRzZWxmIHVzZSB0aGUgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIGl0IHByb3ZpZGVzLiBGb3IgRGF0YUNpdGUgdGhpcyBtZWFucyB0aGF0IHdlIHNob3VsZCB1c2UgRE9JcyB3aXRoIGFwcHJvcHJpYXRlIG1ldGFkYXRhIGFuZCBzdHJhdGVnaWVzIGZvciBsb25nLXRlcm0gcHJlc2VydmF0aW9uIGZvci4uLiIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9ibG9nLmRhdGFjaXRlLm9yZy9pbWFnZXMvMjAxNi8xMi8yMzA3ODUuanBnIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnR5cGUiIGNvbnRlbnQ9ImJsb2ciIC8+CgogICAgPGxpbmsgaHJlZj0iLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxpYnJlK0Jhc2tlcnZpbGxlOjQwMCw0MDBpLDcwMCIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgIDxsaW5rIGhyZWY9Jy8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1SYWxld2F5OjQwMCw2MDAsNDAwaXRhbGljLDYwMGl0YWxpYycgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+CiAgICA8bGluayBocmVmPSIvL21heGNkbi5ib290c3RyYXBjZG4uY29tL2ZvbnQtYXdlc29tZS80LjYuMS9jc3MvZm9udC1hd2Vzb21lLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0ndGV4dC9jc3MnPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9hc3NldHMuZGF0YWNpdGUub3JnL3N0eWxlc2hlZXRzL2RhdGFjaXRlLmNzcyIgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+CiAgICA8bGluayBocmVmPSJodHRwczovL2Fzc2V0cy5kYXRhY2l0ZS5vcmcvaW1hZ2VzL2Zhdmljb24uaWNvIiByZWw9Imljb24iIHR5cGU9ImltYWdlL2ljbyIgLz4KCiAgICA8c2NyaXB0IHNyYz0iLy9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvZml0dmlkcy8xLjEuMC9qcXVlcnkuZml0dmlkcy5taW4uanMiPjwvc2NyaXB0PgoKICAgICAgPHNjcmlwdAogICAgICAgIHNyYz0iLy9kMnd5OGY3YTl1cnNubS5jbG91ZGZyb250Lm5ldC9idWdzbmFnLTIubWluLmpzIgogICAgICAgIGRhdGEtYXBpa2V5PSJjMzdhNTg2MTk2NzA5MWE5YjQyYTFhNzdlMjM1MTE0YSI+CiAgICAgIDwvc2NyaXB0PgoKICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+CiAgICAgIHsiQGNvbnRleHQiOiJodHRwOi8vc2NoZW1hLm9yZyIsIkB0eXBlIjoiQmxvZ1Bvc3RpbmciLCJAaWQiOiJodHRwczovL2RvaS5vcmcvMTAuNTQzOC80azNtLW55dmciLCJuYW1lIjoiRWF0aW5nIHlvdXIgb3duIERvZyBGb29kIiwidXJsIjoiaHR0cHM6Ly9ibG9nLmRhdGFjaXRlLm9yZy9lYXRpbmcteW91ci1vd24tZG9nLWZvb2QvIiwiYXV0aG9yIjpbeyJAdHlwZSI6IlBlcnNvbiIsIkBpZCI6Imh0dHBzOi8vb3JjaWQub3JnLzAwMDAtMDAwMy0xNDE5LTI0MDUiLCJnaXZlbk5hbWUiOiJNYXJ0aW4iLCJmYW1pbHlOYW1lIjoiRmVubmVyIiwibmFtZSI6Ik1hcnRpbiBGZW5uZXIifV0sInB1Ymxpc2hlciI6eyJAdHlwZSI6Ik9yZ2FuaXphdGlvbiIsIm5hbWUiOiJEYXRhQ2l0ZSJ9LCJkYXRlQ3JlYXRlZCI6IjIwMTYtMTItMjAiLCJkYXRlUHVibGlzaGVkIjoiMjAxNi0xMi0yMCIsImRhdGVNb2RpZmllZCI6IjIwMTYtMTItMjAiLCJrZXl3b3JkcyI6ImRhdGFjaXRlLCBkb2ksIG1ldGFkYXRhLCBmZWF0dXJlZCIsInZlcnNpb24iOiIxLjAiLCJkZXNjcmlwdGlvbiI6IkVhdGluZyB5b3VyIG93biBkb2cgZm9vZCBpcyBhIHNsYW5nIHRlcm0gdG8gZGVzY3JpYmUgdGhhdCBhbiBvcmdhbml6YXRpb24gc2hvdWxkIGl0c2VsZiB1c2UgdGhlIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyBpdCBwcm92aWRlcy4gRm9yIERhdGFDaXRlIHRoaXMgbWVhbnMgdGhhdCB3ZSBzaG91bGQgdXNlIERPSXMgd2l0aCBhcHByb3ByaWF0ZSBtZXRhZGF0YSBhbmQgc3RyYXRlZ2llcyBmb3IgbG9uZy10ZXJtIHByZXNlcnZhdGlvbiBmb3IuLi4iLCJsaWNlbnNlIjoiaHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LzQuMC8iLCJpbWFnZSI6Imh0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmcvaW1hZ2VzLzIwMTYvMTIvMjMwNzg1LmpwZyIsImlzUGFydE9mIjp7IkB0eXBlIjoiQmxvZyIsIkBpZCI6Imh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzAwMDAtMDBTUyIsIm5hbWUiOiJEYXRhQ2l0ZSBCbG9nIn0sImNpdGF0aW9uIjpbeyJAdHlwZSI6IkNyZWF0aXZlV29yayIsIkBpZCI6Imh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzAwMTIifSx7IkB0eXBlIjoiQ3JlYXRpdmVXb3JrIiwiQGlkIjoiaHR0cHM6Ly9kb2kub3JnLzEwLjU0MzgvNTVFNS1UNUMwIn1dfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPGhlYWRlciBjbGFzcz0iaGVhZGVyIiBpZD0ibmF2dG9wIj4KICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyIG5hdmJhci13aGl0ZSIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiCiAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ibmF2YmFyLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iLm5hdmJhci1jb2xsYXBzZSI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNyLW9ubHkiPlRvZ2dsZSBuYXZpZ2F0aW9uPC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCIgaHJlZj0iLyI+RGF0YUNpdGUgQmxvZzwvYT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSI+CiAgICAgICAgICAgIDx1bCBjbGFzcz0ibmF2IG5hdmJhci1uYXYgbmF2YmFyLXJpZ2h0Ij4KICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zdXBwb3J0LmRhdGFjaXRlLm9yZyI+U3VwcG9ydDwvYT48L2xpPgogICAgICAgICAgICAgIDxsaSBjbGFzcz0iZHJvcGRvd24iPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImRyb3Bkb3duLXRvZ2dsZSIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBpZD0ic2l0ZXMiPjxpIGNsYXNzPSdmYSBmYS10aCc+PC9pPiA8c3BhbiBjbGFzcz0iY2FyZXQiPjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUiIHJvbGU9Im1lbnUiPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0nZmEgZmEtZ2xvYmUgZmEtZncnPjwvaT4KICAgICAgICAgICAgICAgICAgICBIb21lcGFnZTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmciPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1yc3MgZmEtZncnPjwvaT4KICAgICAgICAgICAgICAgICAgICBCbG9nPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImRpdmlkZXIiPjwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL21kcy5kYXRhY2l0ZS5vcmciPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1kYXRhYmFzZSBmYS1mdyc+PC9pPgogICAgICAgICAgICAgICAgICAgIE1EUzwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vc2NoZW1hLmRhdGFjaXRlLm9yZyI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9J2ZhIGZhLWZpbGUtY29kZS1vIGZhLWZ3Jz48L2k+CiAgICAgICAgICAgICAgICAgICAgU2NoZW1hPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL2NpdGF0aW9uLmNyb3NzY2l0ZS5vcmciPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1maWxlLXRleHQtbyBmYS1mdyc+PC9pPgogICAgICAgICAgICAgICAgICAgIENpdGF0aW9uIEZvcm1hdHRlcjwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJkaXZpZGVyIj48L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zZWFyY2guZGF0YWNpdGUub3JnIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0nZmEgZmEtc2VhcmNoIGZhLWZ3Jz48L2k+CiAgICAgICAgICAgICAgICAgICAgU2VhcmNoPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9vYWkuZGF0YWNpdGUub3JnIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0nZmEgZmEtdGFibGUgZmEtZncnPjwvaT4KICAgICAgICAgICAgICAgICAgICBPQUktUE1IPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zdGF0cy5kYXRhY2l0ZS5vcmciPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1iYXItY2hhcnQgZmEtZncnPjwvaT4KICAgICAgICAgICAgICAgICAgICBTdGF0aXN0aWNzPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9hcGkuZGF0YWNpdGUub3JnIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0nZmEgZmEtY29ncyBmYS1mdyc+PC9pPgogICAgICAgICAgICAgICAgICAgIFJFU1QgQVBJPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5yZTNkYXRhLm9yZyI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9J2ZhIGZhLWN1YmVzIGZhLWZ3Jz48L2k+CiAgICAgICAgICAgICAgICAgICAgcmUzZGF0YTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJkaXZpZGVyIj48L2xpPgogICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3N0YXR1cy5kYXRhY2l0ZS5vcmciPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1jYWxlbmRhci1jaGVjay1vIGZhLWZ3Jz48L2k+CiAgICAgICAgICAgICAgICAgICAgU3RhdHVzPC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CiAgICAgIDxkaXYgY2xhc3M9IndyYXBwZXIiPgogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiBzZWN0aW9uLXdoaXRlIj4KICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgcm93LXNlY3Rpb24iPgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTggY29sLW1kLW9mZnNldC0yIHBvc3QtY29udGVudCI+CiAgICAgICAgICAgIDxhIG5hbWU9InRvcG9mcGFnZSI+PC9hPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwb3N0LW1ldGEiPgogICAgICAgICAgICAgIDxoMT5FYXRpbmcgeW91ciBvd24gRG9nIEZvb2Q8L2gxPgogICAgICAgICAgICAgIERlY2VtYmVyIDIwLCAyMDE2IGJ5IE1hcnRpbiBGZW5uZXIKICAgICAgICAgICAgICDigKIgPHNwYW4gY2xhc3M9InBvc3QtcmVhZGluZy10aW1lIj48L3NwYW4+IHJlYWQKICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJkb2kiPjxhIGhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzRrM20tbnl2ZyI+aHR0cHM6Ly9kb2kub3JnLzEwLjU0MzgvNGszbS1ueXZnPC9hPjwvcD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8cD48YSBocmVmPSJodHRwczovL25ld3JlcHVibGljLmNvbS9hcnRpY2xlLzExNTM0OS9kb2dmb29kaW5nLXRlY2gtc2xhbmctd29ya2luZy1vdXQtZ2xpdGNoZXMiPkVhdGluZyB5b3VyIG93biBkb2cgZm9vZDwvYT4gaXMgYSBzbGFuZyB0ZXJtIHRvIGRlc2NyaWJlIHRoYXQgYW4gb3JnYW5pemF0aW9uIHNob3VsZCBpdHNlbGYgdXNlIHRoZSBwcm9kdWN0cyBhbmQgc2VydmljZXMgaXQgcHJvdmlkZXMuIEZvciBEYXRhQ2l0ZSB0aGlzIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIHVzZSBET0lzIHdpdGggYXBwcm9wcmlhdGUgbWV0YWRhdGEgYW5kIHN0cmF0ZWdpZXMgZm9yIGxvbmctdGVybSBwcmVzZXJ2YXRpb24gZm9yIHRoZSBzY2hvbGFybHkgb3V0cHV0cyB3ZSBwcm9kdWNlLiBGb3IgdGhlIG1vc3QgcGFydCB0aGlzIGlzIG5vdCByZXNlYXJjaCBkYXRhLCBidXQgcmF0aGVyIHRlY2huaWNhbCBkb2N1bWVudHMgc3VjaCBhcyB0aGUgRGF0YUNpdGUgU2NoZW1hIGFuZCBpdHMgZG9jdW1lbnRhdGlvbiA8c3BhbiBjbGFzcz0iY2l0YXRpb24iPig8YSBocmVmPSIjcmVmLWh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzAwMTIiPjIwMTY8L2E+KTwvc3Bhbj4uPC9wPgo8cD5UaGVzZSBvdXRwdXRzIGFsc28gaW5jbHVkZSB0aGUgcG9zdHMgb24gdGhpcyBibG9nLCB3aGVyZSB3ZSBkaXNjdXNzIHRvcGljcyByZWxldmFudCBmb3IgdGhlIERhdGFDaXRlIGNvbW11bml0eSwgYnV0IGFsc28gb2YgYnJvYWRlciBpbnRlcmVzdCB0byBhbnlvbmUgd2hvIGNhcmVzIGFib3V0IHJlc2VhcmNoIGRhdGEsIHBlcnNpc3RlbnQgaWRlbnRpZmllcnMsIGFuZCBzY2hvbGFybHkgaW5mcmFzdHJ1Y3R1cmUuIEFuZCBzdGFydGluZyB0b2RheSBhbGwgYmxvZyBwb3N0cyBvbiB0aGlzIGJsb2cgd2lsbCBoYXZlIGEgRE9JLCBtZXRhZGF0YSBhbmQgdXNlIGEgcGVyc2lzdGVudCBzdG9yYWdlIG1lY2hhbmlzbS48L3A+CjxkaXYgY2xhc3M9ImZpZ3VyZSI+CjxpbWcgc3JjPSIvaW1hZ2VzLzIwMTYvMTIvMjMwNzg1LmpwZyIgYWx0PSJQaG90byBieSBCaWxsIEVtcmljaC4gQ0MgWmVyby4iIC8+CjxwIGNsYXNzPSJjYXB0aW9uIj5QaG90byBieSA8YSBocmVmPSJodHRwczovL3d3dy5wZXhlbHMuY29tL3Bob3RvL2JsYWNrLWFuZC10YW4teW9ya3NoaXJlLXRlcnJpZXItcHVwcHktMjMwNzg1LyI+QmlsbCBFbXJpY2g8L2E+LiA8YSBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvcHVibGljZG9tYWluL3plcm8vMS4wLyI+Q0MgWmVybzwvYT4uPC9wPgo8L2Rpdj4KPGgzIGlkPSJ0ZWNobmljYWwtaW1wbGVtZW50YXRpb24iPlRlY2huaWNhbCBJbXBsZW1lbnRhdGlvbjwvaDM+CjxwPlRoaXMgYmxvZyBpcyBwb3dlcmVkIGJ5IHRoZSBzdGF0aWMgc2l0ZSBnZW5lcmF0b3IgPGEgaHJlZj0iaHR0cHM6Ly9taWRkbGVtYW5hcHAuY29tLyI+TWlkZGxlbWFuPC9hPiwgd2l0aCBibG9nIHBvc3RzIHdyaXR0ZW4gaW4gPGEgaHJlZj0iaHR0cDovL2NvbW1vbm1hcmsub3JnLyI+TWFya2Rvd248L2E+IGFuZCBjb252ZXJ0ZWQgdG8gSFRNTCB1c2luZyA8YSBocmVmPSJodHRwOi8vcGFuZG9jLm9yZy8iPlBhbmRvYzwvYT4gYW5kIHRoZSA8YSBocmVmPSJodHRwczovL3RyYXZpcy1jaS5vcmciPlRyYXZpcyBDSTwvYT4gY29udGludW91cyBpbnRlZ3JhdGlvbiBzZXJ2aWNlLiBTdGF0aWMgc2l0ZSBnZW5lcmF0b3IgbWVhbnMgdGhhdCB0aGVyZSBpcyBubyBkYXRhYmFzZSBvciBhcHBsaWNhdGlvbiBzZXJ2ZXIgcG93ZXJpbmcgdGhlIHNpdGUsIG1ha2luZyB3ZWJzaXRlIGFkbWluc3RyYXRpb24gc2ltcGxlciwgY2hlYXBlciBhbmQgc2FmZXIuIEluIGFkZGl0aW9uIHRvIHRoZSBibG9nLCB0aGUgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnIj5EYXRhQ2l0ZSBob21lcGFnZTwvYT4gYW5kIDxhIGhyZWY9Imh0dHBzOi8vc2NoZW1hLmRhdGFjaXRlLm9yZyI+TWV0YWRhdGEgU2NoZW1hIHN1YnNpdGU8L2E+IGFyZSBhbHNvIGdlbmVyYXRlZCB1c2luZyBNaWRkbGVtYW4uPC9wPgo8cD5UaGUgc2ltcGxpY2l0eSBpcyBwYXJ0aWN1bGFybHkgaW1wb3J0YW50IGhlcmUsIGFzIHJlZ2lzdGVyaW5nIHRoZSBET0lzIGFuZCBtZXRhZGF0YSBjYW4gYmUgYWNjb21wbGlzaGVkIHVzaW5nIGEgY29tbWFuZCBsaW5lIHV0aWxpdHkgd3JpdHRlbiBieSBEYXRhQ2l0ZSBzdGFmZiB0aGF0IGRvZXNu4oCZdCBuZWVkIHRvIGtub3cgbXVjaCBhYm91dCB0aGUgaW50ZXJuYWxzIG9mIE1pZGRsZW1hbiwgYW5kIHRodXMgY2FuIGJlIGVhc2lseSBhZGFwdGVkIHRvIG90aGVyIHN0YXRpYyBzaXRlIGdlbmVyYXRvcnMgc3VjaCBhcyA8YSBocmVmPSJodHRwOi8vamVreWxscmIuY29tLyI+SmVreWxsPC9hPiwgPGEgaHJlZj0iaHR0cDovL2dvaHVnby5pby8iPkh1Z288L2E+IG9yIDxhIGhyZWY9Imh0dHBzOi8vaGV4by5pby8iPkhleG88L2E+LiBUaGUgY29tbWFuZCBsaW5lIHV0aWxpdHkgaXMgPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2RhdGFjaXRlL2Npcm5lY28iPkNpcm5lY288L2E+LCBnZW5lcmF0aW5nIHRoZSBtZXRhZGF0YSBYTUwgYWNjb3JkaW5nIHRvIHRoZSBEYXRhQ2l0ZSBNZXRhZGF0YSBTY2hlbWEsIGFuZCByZWdpc3RlcmluZyBET0kgYW5kIG1ldGFkYXRhIHdpdGggdGhlIERhdGFDaXRlIE1EUy4gTGlrZSBhbGwgdG9vbHMgbWVudGlvbmVkIGluIHRoaXMgcG9zdCBDaXJuZWNvIGlzIG9wZW4gc291cmNlIHNvZnR3YXJlLCBwbGVhc2UgcmVhY2ggb3V0IHRvIHVzIGlmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBpbXBsZW1lbnRpbmcgc2ltaWxhciBmdW5jdGlvbmFsaXR5IGZvciB5b3VyIGJsb2cuPC9wPgo8aDMgaWQ9ImdlbmVyYXRpbmctZG9pcyI+R2VuZXJhdGluZyBET0lzPC9oMz4KPHA+VGhlIERPSXMgZm9yIHRoaXMgYmxvZyBhcmUgZ2VuZXJhdGVkIGF1dG9tYXRpY2FsbHksIHVzaW5nIGEgbW9kaWZpZWQgYmFzZTMyIGVuY29kaW5nIGFsZ29yaXRobSB0aGF0IGlzIHByb3ZpZGVkIGJ5IENpcm5lY28sIGFzIGRpc2N1c3NlZCBsYXN0IHdlZWsgPHNwYW4gY2xhc3M9ImNpdGF0aW9uIj4oRmVubmVyLCA8YSBocmVmPSIjcmVmLWh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzU1RTUtVDVDMCI+MjAxNjwvYT4pPC9zcGFuPi4gVGhlIERPSSBpcyBnZW5lcmF0ZWQgYW5kIG1pbnRlZCB3aGVuIGEgbmV3IHBvc3QgaXMgcHVzaGVkIHRvIDxhIGhyZWY9Imh0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmciIGNsYXNzPSJ1cmkiPmh0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmc8L2E+LiBUaGlzIGF2b2lkcyB0d28gcHJvYmxlbXM6IGEpIERPSS1saWtlIHN0cmluZ3MgaW4gdGhlIHdpbGQgYmVmb3JlIHB1YmxpY2F0aW9uIGFuZCBiKSB0aGUgcmFuZG9tbHkgZ2VuZXJhdGVkIERPSSBleGlzdHMgYWxyZWFkeSAod2UgY2FuIHNpbXBseSBnZW5lcmF0ZSBhIG5ldyBvbmUpLiBBbGwgRE9JcyBhcmUgc2hvcnQsIHdpdGhvdXQgc2VtYW50aWMgaW5mb21hdGlvbiB0aGF0IG1pZ2h0IGNoYW5nZSBvdmVyIHRpbWUsIGFuZCB3aXRoIGEgY2hlY2tzdW0gdG8gbWluaW1pemUgdHJhbnNjcmlwdGlvbiBlcnJvcnMsIGZvciBleGFtcGxlIDxzdHJvbmc+aHR0cHM6Ly9kb2kub3JnLzEwLjU0MzgvWENCSi1HN1pZPC9zdHJvbmc+LiBHb2luZyBmb3J3YXJkIHdlIGVuY291cmFnZSB1c2VycyB0byBsaW5rIHRvIHRoZSBEYXRhQ2l0ZSBCbG9nIHVzaW5nIHRoZSBET0ksIGFzIHRoZXNlIGxpbmtzIHdpbGwgY29udGludWUgdG8gd29yayBldmVuIGlmIHdlIGV2ZXIgbW92ZSB0aGUgYmxvZyB0byBhIGRpZmZlcmVudCBsb2NhdGlvbi48L3A+CjxoMyBpZD0iZ2VuZXJhdGluZy1tZXRhZGF0YSI+R2VuZXJhdGluZyBNZXRhZGF0YTwvaDM+CjxwPkZvciB0aGUgZ2VuZXJhdGlvbiBvZiBtZXRhZGF0YSwgd2UgbmVlZCB0byBzdHJpa2UgYSBiYWxhbmNlIGJldHdlZW4gc2ltcGxlIGF1dGhvciBwcm92aWRlZCBtZXRhZGF0YSwgYnV0IHJpY2ggZW5vdWdoIHRvIGFpZCBkaXNjb3ZlcnkuIFdlIGFyZSBkb2luZyB0aGlzIHZpYSB0aHJlZSBtZWNoYW5pc21zOjwvcD4KPHVsPgo8bGk+bWV0YWRhdGEgcHJvdmlkZWQgYnkgdGhlIGF1dGhvcjwvbGk+CjxsaT5kZWZhdWx0IG1ldGFkYXRhIGZvciB0aGUgYmxvZzwvbGk+CjxsaT5tZXRhZGF0YSBhdXRvbWF0aWNhbGx5IGV4dHJhY3RlZCBmcm9tIGNvbnRlbnQ8L2xpPgo8L3VsPgo8cD5UaGUgbWV0YWRhdGEgcHJvdmlkZWQgYnkgdGhlIGF1dGhvciBhcmUgdGhlIHR5cGljYWwgbWV0YWRhdGEgZm9yIGJsb2cgcG9zdHMsIHByb3ZpZGVkIHZpYSA8YSBocmVmPSJodHRwczovL2dvaHVnby5pby9jb250ZW50L2Zyb250LW1hdHRlci8iPllBTUwgZnJvbnQgbWF0dGVyPC9hPiBhdCB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggcG9zdDo8L3A+CjxkaXYgY2xhc3M9InNvdXJjZUNvZGUiPjxwcmUgY2xhc3M9InNvdXJjZUNvZGUgeWFtbCI+PGNvZGUgY2xhc3M9InNvdXJjZUNvZGUgeWFtbCI+PHNwYW4gY2xhc3M9Im90Ij4tLS08L3NwYW4+CjxzcGFuIGNsYXNzPSJmdSI+bGF5b3V0Ojwvc3Bhbj4gcG9zdAo8c3BhbiBjbGFzcz0iZnUiPnRpdGxlOjwvc3Bhbj4gRWF0aW5nIHlvdXIgb3duIERvZyBGb29kCjxzcGFuIGNsYXNzPSJmdSI+YXV0aG9yOjwvc3Bhbj4gbWZlbm5lcgo8c3BhbiBjbGFzcz0iZnUiPmRhdGU6PC9zcGFuPiAyMDE2LTEyLTE5CjxzcGFuIGNsYXNzPSJmdSI+dGFnczo8L3NwYW4+CjxzcGFuIGNsYXNzPSJrdyI+LTwvc3Bhbj4gZGF0YWNpdGUKPHNwYW4gY2xhc3M9Imt3Ij4tPC9zcGFuPiBkb2kKPHNwYW4gY2xhc3M9Imt3Ij4tPC9zcGFuPiBtZXRhZGF0YQo8c3BhbiBjbGFzcz0ib3QiPi0tLTwvc3Bhbj48L2NvZGU+PC9wcmU+PC9kaXY+CjxwPldlIGNhbiByZXVzZSBhbGwgdGhlc2UgbWV0YWRhdGEgd2hlbiBnZW5lcmF0aW5nIERhdGFDaXRlIG1ldGFkYXRhLCB1c2luZyB0aGUgdGFncyBhcyA8Y29kZT5zdWJqZWN0czwvY29kZT4uPC9wPgo8cD5UaGUgZGVmYXVsdCBtZXRhZGF0YSBhcmUgbWV0YWRhdGEgdGhhdCBhbHdheXMgc3RheSB0aGUgc2FtZSBmb3IgdGhlIGJsb2csIHN1Y2ggYXMgPGNvZGU+cHVibGlzaGVyPC9jb2RlPiwgPGNvZGU+SG9zdGluZ0luc3RpdHV0aW9uPC9jb2RlPiBhbmQgPGNvZGU+cmlnaHRzPC9jb2RlPi4gV2UgY2FuIHN0b3JlIHRoZW0gaW4gYSBzaXRlLXdpZGUgY29uZmlndXJhdGlvbiBmaWxlLiBXZSBjYW4gYWxzbyBhc3N1bWUgcmVhc29uYWJsZSBkZWZhdWx0cyB0aGF0IGNhbiBiZSBvdmVycmlkZGVuIGluIHRoZSBZQU1MIGZyb250IG1hdHRlciwgZS5nLiA8Y29kZT5yZXNvdXJjZVR5cGU8L2NvZGU+ICh3ZSB1c2UgPGEgaHJlZj0iaHR0cHM6Ly9zY2hlbWEub3JnL0Jsb2dQb3N0aW5nIj5CbG9nUG9zdGluZzwvYT4gd2l0aCA8Y29kZT5yZXNvdXJjZVR5cGVHZW5lcmFsPC9jb2RlPiBUZXh0KSBhbmQgPGNvZGU+dmVyc2lvbjwvY29kZT4uIFdlIHN0b3JlIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgYXV0aG9ycyBvdXRzaWRlIHRoZSBibG9nIHBvc3QsIGluY2x1ZGluZyA8Y29kZT5naXZlbk5hbWU8L2NvZGU+LCA8Y29kZT5mYW1pbHlOYW1lPC9jb2RlPiBhbmQgPGNvZGU+bmFtZUlkZW50aWZpZXI8L2NvZGU+ICh3ZSBub3cgc2hvdyB0aGUgT1JDSUQgSUQgb2YgZXZlcnkgYmxvZyBhdXRob3IgYXQgdGhlIGJvdHRvbSBvZiB0aGUgcG9zdCkuPC9wPgo8cD5GaW5hbGx5LCB0aGVyZSBhcmUgbWV0YWRhdGEgdGhhdCB3ZSBjYW4gYXV0b21hdGljYWxseSBleHRyYWN0IGZyb20gdGhlIGJsb2cgcG9zdCwgYW5kIHdlIGFyZSBjdXJyZW50bHkgZG9pbmcgdGhpcyBmb3IgdGhlIDxjb2RlPmRlc2NyaXB0aW9uPC9jb2RlPiBhbmQgPGNvZGU+cmVsYXRlZElkZW50aWZpZXI8L2NvZGU+LiBUaGlzIGJsb2cgdXNlcyBQYW5kb2MgYW5kIEJpYlRleCB0byBnZW5lcmF0ZSB0aGUgcmVmZXJlbmNlcyBzZWN0aW9uIGF0IHRoZSBlbmQsIGFuZCB3ZSBjYW4gZmV0Y2ggdGhpcyBpbmZvcm1hdGlvbiBhbmQgY29udmVydCBpdCBpbnRvIHRoZSBmb3JtYXQgbmVlZGVkIGZvciA8Y29kZT5yZWxhdGVkSWRlbnRpZmllcjwvY29kZT4uPC9wPgo8cD5UYWtlbiB0b2dldGhlciB3ZSBjYW4gcHJvdmlkZSBhbGwgbWV0YWRhdGEgdGhhdCBhcmUgPGVtPnJlcXVpcmVkPC9lbT4gb3IgPGVtPnJlY29tbWVuZGVkPC9lbT4gaW4gdGhlIE1ldGFkYXRhIFNjaGVtYSBkb2N1bWVudGF0aW9uIDxzcGFuIGNsYXNzPSJjaXRhdGlvbiI+KDxhIGhyZWY9IiNyZWYtaHR0cHM6Ly9kb2kub3JnLzEwLjU0MzgvMDAxMiI+MjAxNjwvYT4pPC9zcGFuPiwgYW5kIHdlIGNhbiBkbyB0aGlzIHdpdGhvdXQgYW55IGV4dHJhIGVmZm9ydCBmb3IgdGhlIGF1dGhvci4gVGhlIGZ1bGwgWE1MIGlzIGF2YWxhaWxhYmxlIDxhIGhyZWY9Imh0dHBzOi8vZGF0YS5kYXRhY2l0ZS5vcmcvYXBwbGljYXRpb24veC1kYXRhY2l0ZSt4bWwvMTAuNTQzOC80SzNNLU5ZVkciPmhlcmU8L2E+LjwvcD4KPHA+Tm90IGFsbCBibG9nIHBvc3RzIG5lZWQgdG8gYmUgY2l0ZWQgZm9ybWFsbHkgd2l0aCBtZXRhZGF0YSBpbiBhIDxlbT5yZWZlcmVuY2VzPC9lbT4gbGlzdCBmb3JtYXR0ZWQgYWNjb3JkaW5nIHRvIGEgc3BlY2lmaWMgY2l0YXRpb24gc3R5bGUuIEJ1dCB0aGVzZSBtZXRhZGF0YSBncmVhdGx5IGhlbHAgd2l0aCBkaXNjb3ZlcnksIGEgc2VhcmNoIGluIERhdGFDaXRlIFNlYXJjaCBmb3IgPGEgaHJlZj0iaHR0cDovL3NlYXJjaC5kYXRhY2l0ZS5vcmcvd29ya3M/cXVlcnk9ZWF0aW5nK2RvZytmb29kIj5lYXRpbmcgZG9nIGZvb2Q8L2E+IHdpbGwgZm9yIGV4YW1wbGUgYnJpbmcgdXAgdGhpcyBibG9nIHBvc3QgYXMgdGhlIGZpcnN0IGhpdC48L3A+CjxoMyBpZD0icGVyc2lzdGVudC1zdG9yYWdlIj5QZXJzaXN0ZW50IHN0b3JhZ2U8L2gzPgo8cD5Vc2luZyBET0lzIG1lYW5zIHRoYXQgcmVhZGVycyBub3Qgb25seSBleHBlY3QgcmljaCBtZXRhZGF0YSB0aGF0IGhlbHAgd2l0aCBjaXRhdGlvbiBhbmQgZGlzY292ZXJ5LCBidXQgYWxzbyB0aGF0IERhdGFDaXRlIHRha2VzIGV4dHJhIGNhcmUgdG8gcHJlc2VydmUgdGhlIGJsb2cgcG9zdHMsIHRoaW5raW5nIGJleW9uZCB0aGUgcGFydGljdWxhciB0ZWNobmljYWwgaW1wbGVtZW50YXRpb24gb3IgZXZlbiB0aGUgY29udGl1aW5nIGV4aXN0ZW5jZSBvZiB0aGlzIGJsb2cuIFRoaXMgaXMgYW4gYXJlYSB3aGVyZSB3ZSBkbyBuZWVkIHRvIGRvIG1vcmUgd29yaywgc3RhcnRpbmcgd2l0aCBhIGRlY2lzaW9uIGFib3V0IHRoZSBiZXN0IGFyY2hpdmFsIGZvcm1hdCBmb3IgYSBibG9nIHBvc3QgKEhUTUwsIFBERiwgPGEgaHJlZj0iaHR0cHM6Ly9qYXRzLm5sbS5uaWguZ292LyI+SkFUUzwvYT4/KS4gRm9yIG5vdyBibG9nIHBvc3RzIGFyZSBob3N0ZWQgaW4gbXVsdGlwbGUgR2l0IHJlcG9zaXRvcmllcyAoPGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2RhdGFjaXRlL2Jsb2ciPm9uZSBvZiB0aGVtIG9uIEdpdGh1YjwvYT4pLCBhbmQgaW4gdHdvIGluZGVwZW5kZW50IEFtYXpvbiBTMyBidWNrZXRzIHRoYXQgZWFjaCB1c2UgPGEgaHJlZj0iaHR0cDovL2RvY3MuYXdzLmFtYXpvbi5jb20vQW1hem9uUzMvbGF0ZXN0L2Rldi9WZXJzaW9uaW5nLmh0bWwiPnZlcnNpb25pbmc8L2E+LiBNdWx0aXBsZSBsb2NhdGlvbnMgd2l0aCB2ZXJzaW9uaW5nIGFyZSBhIGdvb2Qgc3RhcnQsIGJ1dCBtb3JlIHdvcmsgaXMgY2xlYXJseSBuZWVkZWQuPC9wPgo8aDMgaWQ9InJlZmVyZW5jZXMiIGNsYXNzPSJ1bm51bWJlcmVkIj5SZWZlcmVuY2VzPC9oMz4KPGRpdiBpZD0icmVmcyIgY2xhc3M9InJlZmVyZW5jZXMiPgo8ZGl2IGlkPSJyZWYtaHR0cHM6Ly9kb2kub3JnLzEwLjU0MzgvMDAxMiI+CjxwPkRhdGFDaXRlIE1ldGFkYXRhIFdvcmtpbmcgR3JvdXAuICgyMDE2KS4gRGF0YUNpdGUgTWV0YWRhdGEgU2NoZW1hIGZvciB0aGUgUHVibGljYXRpb24gYW5kIENpdGF0aW9uIG9mIFJlc2VhcmNoIERhdGEgdjQuMC4gPGVtPkRhdGFDaXRlPC9lbT4uIDxhIGhyZWY9Imh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzAwMTIiIGNsYXNzPSJ1cmkiPmh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzAwMTI8L2E+PC9wPgo8L2Rpdj4KPGRpdiBpZD0icmVmLWh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzU1RTUtVDVDMCI+CjxwPkZlbm5lciwgTS4gKDIwMTYpLiBDb29sIERPSeKAmXMuIDxlbT5EYXRhQ2l0ZTwvZW0+LiA8YSBocmVmPSJodHRwczovL2RvaS5vcmcvMTAuNTQzOC81NUU1LVQ1QzAiIGNsYXNzPSJ1cmkiPmh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzU1RTUtVDVDMDwvYT48L3A+CjwvZGl2Pgo8L2Rpdj4KCiAgICAgICAgICAgIDxociB3aWR0aD0iODAlIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNSBjb2wtbWQtb2Zmc2V0LTIgcG9zdC1jb250ZW50Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm90dG9tLXRlYXNlciBjZiI+CiAgPGRpdiBjbGFzcz0iaXNMZWZ0Ij4KICAgIDxzZWN0aW9uIGNsYXNzPSJhdXRob3IiPgogICAgICAgICAgPGRpdiBjbGFzcz0iYXV0aG9yLWltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTogdXJsKGh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvNDM0NTkyYTA5N2U5MTI2MTc5MmViZDZiNDkyMDQyYmM/cz0yNTAmZD1tbSZyPXgpIj5CbG9nIExvZ288L2Rpdj4KICAgICAgICA8aDQ+TWFydGluIEZlbm5lcjwvaDQ+CiAgICAgICAgPHAgY2xhc3M9ImJpbyI+RGF0YUNpdGUgVGVjaG5pY2FsIERpcmVjdG9yPC9wPgogICAgICAgIDxwIGNsYXNzPSJvcmNpZCI+PGEgaHJlZj0iaHR0cHM6Ly9vcmNpZC5vcmcvMDAwMC0wMDAzLTE0MTktMjQwNSI+aHR0cHM6Ly9vcmNpZC5vcmcvMDAwMC0wMDAzLTE0MTktMjQwNTwvYT48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXJmaXgiPjwvZGl2PgogICAgICA8aDQ+RWF0aW5nIHlvdXIgb3duIERvZyBGb29kPC9oND4KICAgICAgICA8cCBjbGFzcz0icHVibGlzaGVkIj48YSBocmVmPSJodHRwczovL2RvaS5vcmcvMTAuNTQzOC80azNtLW55dmciPmh0dHBzOi8vZG9pLm9yZy8xMC41NDM4LzRrM20tbnl2ZzwvYT4KICAgICAgPHAgY2xhc3M9InB1Ymxpc2hlZCI+PGkgY2xhc3M9ImZhIGZhLWNhbGVuZGFyIj48L2k+IDx0aW1lIGRhdGV0aW1lPSIyMDE2LTEyLTIwIDAwOjAwIj5EZWNlbWJlciAyMCwgMjAxNjwvdGltZT48L3A+CiAgICAgIDxwIGNsYXNzPSJwdWJsaXNoZWQiPjxpIGNsYXNzPSJmYSBmYS1oaXN0b3J5Ij48L2k+IDxhIGhyZWY9Imh0dHBzOi8vZ2l0aHViLmNvbS9kYXRhY2l0ZS9ibG9nL2NvbW1pdHMvbWFzdGVyL3NvdXJjZS9wb3N0cy9lYXRpbmcteW91ci1vd24tZG9nLWZvb2QuaHRtbC5tZCI+SGlzdG9yeTwvYT48L3A+CiAgICAgIDxwIGNsYXNzPSJwdWJsaXNoZWQiPsKpIDIwMTYgTWFydGluIEZlbm5lci4gRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSA8YSBocmVmPSJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnkvNC4wLyI+Q3JlYXRpdmUgQ29tbW9ucyBBdHRyaWJ1dGlvbiBsaWNlbnNlPC9hPi48L3A+CiAgICAgIDxwIGNsYXNzPSJwdWJsaXNoZWQiPgogICAgICAgIDxpIGNsYXNzPSJmYSBmYS10YWdzIj48L2k+CiAgICAgICAgPGEgaHJlZj0iL2luZGV4Lmh0bWw/dGFnPWRhdGFjaXRlIj5kYXRhY2l0ZTwvYT4sIDxhIGhyZWY9Ii9pbmRleC5odG1sP3RhZz1kb2kiPmRvaTwvYT4sIDxhIGhyZWY9Ii9pbmRleC5odG1sP3RhZz1tZXRhZGF0YSI+bWV0YWRhdGE8L2E+LCA8YSBocmVmPSIvaW5kZXguaHRtbD90YWc9ZmVhdHVyZWQiPmZlYXR1cmVkPC9hPgogICAgICA8L3A+CiAgICA8L3NlY3Rpb24+CiAgPC9kaXY+CjwvZGl2PgoKICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTIgY29sLW1kLW9mZnNldC0xIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJvdHRvbS10ZWFzZXIgY2YiPgogIDxkaXYgY2xhc3M9ImlzTGVmdCI+CiAgICA8aDUgY2xhc3M9ImluZGV4LWhlYWRsaW5lIGZlYXR1cmVkIj48c3Bhbj5TaGFyZSBvbjwvc3Bhbj48L2g1PgogICAgICA8YSBjbGFzcz0iaWNvbi10d2l0dGVyIiBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vc2hhcmU/dGV4dD1PbiB0aGUgQGRhdGFjaXRlIGJsb2c6IEVhdGluZyB5b3VyIG93biBEb2cgRm9vZCZhbXA7dXJsPWh0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmcvZWF0aW5nLXlvdXItb3duLWRvZy1mb29kLyIKICAgICAgICBvbmNsaWNrPSJ3aW5kb3cub3Blbih0aGlzLmhyZWYsICd0d2l0dGVyLXNoYXJlJywgJ3dpZHRoPTU1MCxoZWlnaHQ9MjU1Jyk7cmV0dXJuIGZhbHNlOyI+CiAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXR3aXR0ZXIgZmEtMngiPjwvaT48c3BhbiBjbGFzcz0iaGlkZGVuIj50d2l0dGVyPC9zcGFuPgogICAgICA8L2E+CiAgICAgIDxhIGNsYXNzPSJpY29uLWZhY2Vib29rIiBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD90PU9uIHRoZSBAZGF0YWNpdGUgYmxvZzogRWF0aW5nIHlvdXIgb3duIERvZyBGb29kJmFtcDt1PWh0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmcvZWF0aW5nLXlvdXItb3duLWRvZy1mb29kLyIKICAgICAgICBvbmNsaWNrPSJ3aW5kb3cub3Blbih0aGlzLmhyZWYsICdmYWNlYm9vay1zaGFyZScsICd3aWR0aD01NTAsaGVpZ2h0PTI1NScpO3JldHVybiBmYWxzZTsiPgogICAgICAgIDxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vayBmYS0yeCI+PC9pPjxzcGFuIGNsYXNzPSJoaWRkZW4iPmZhY2Vib29rPC9zcGFuPgogICAgICA8L2E+CiAgPC9kaXY+CjwvZGl2PgoKICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTggY29sLW1kLW9mZnNldC0yIHBvc3QtY29udGVudCI+CiAgICAgICAgICAgICAgPGRpdiBpZD0iZGlzcXVzX3RocmVhZCI+PC9kaXY+CjxzY3JpcHQ+CiAgICB2YXIgZGlzcXVzX2NvbmZpZyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB0aGlzLnBhZ2UudXJsID0gJ2h0dHBzOi8vYmxvZy5kYXRhY2l0ZS5vcmcvZWF0aW5nLXlvdXItb3duLWRvZy1mb29kLyc7CiAgICAgICAgdGhpcy5wYWdlLmlkZW50aWZpZXIgPSAnaHR0cHM6Ly9ibG9nLmRhdGFjaXRlLm9yZy9lYXRpbmcteW91ci1vd24tZG9nLWZvb2QvJzsKICAgIH07CiAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGQgPSBkb2N1bWVudCwgcyA9IGQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CgogICAgICAgIHMuc3JjID0gJy8vZGF0YWNpdGUuZGlzcXVzLmNvbS9lbWJlZC5qcyc7ICAvLwoKICAgICAgICBzLnNldEF0dHJpYnV0ZSgnZGF0YS10aW1lc3RhbXAnLCArbmV3IERhdGUoKSk7CiAgICAgICAgKGQuaGVhZCB8fCBkLmJvZHkpLmFwcGVuZENoaWxkKHMpOwogICAgfSkoKTsKPC9zY3JpcHQ+Cjxub3NjcmlwdD5QbGVhc2UgZW5hYmxlIEphdmFTY3JpcHQgdG8gdmlldyB0aGUgPGEgaHJlZj0iaHR0cHM6Ly9kaXNxdXMuY29tLz9yZWZfbm9zY3JpcHQiIHJlbD0ibm9mb2xsb3ciPmNvbW1lbnRzIHBvd2VyZWQgYnkgRGlzcXVzLjwvYT48L25vc2NyaXB0PgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICAgIDxmb290ZXIgY2xhc3M9J3JvdyBmb290ZXInPgogICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPgogICAgICAgIDxkaXYgY2xhc3M9J2NvbC1tZC0zIGNvbC1zbS00Jz4KICAgICAgICAgIDxoND5BYm91dCBEYXRhQ2l0ZTwvaDQ+CiAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvbWlzc2lvbi5odG1sIj5XaGF0IHdlIGRvPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvYm9hcmQuaHRtbCI+Qm9hcmQ8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRhdGFjaXRlLm9yZy9zdGVlcmluZy5odG1sIj5TdGVlcmluZyBncm91cHM8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRhdGFjaXRlLm9yZy9zdGFmZi5odG1sIj5TdGFmZjwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL2pvYm9wcG9ydHVuaXRpZXMuaHRtbCI+Sm9iIG9wcG9ydHVuaXRpZXM8L2E+PC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0nY29sLW1kLTMgY29sLXNtLTQnPgogICAgICAgICAgPGg0PlNlcnZpY2VzPC9oND4KICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRhdGFjaXRlLm9yZy9kb2lzLmh0bWwiPkFzc2lnbiBET0lzPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvc2VhcmNoLmh0bWwiPk1ldGFkYXRhIHNlYXJjaDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL2V2ZW50ZGF0YS5odG1sIj5FdmVudCBkYXRhPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvcHJvZmlsZXMuaHRtbCI+UHJvZmlsZXM8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRhdGFjaXRlLm9yZy9yZTNkYXRhLmh0bWwiPnJlM2RhdGE8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRhdGFjaXRlLm9yZy9jaXRhdGlvbi5odG1sIj5DaXRhdGlvbiBmb3JtYXR0ZXI8L2E+PC9saT4KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LmRhdGFjaXRlLm9yZy9zdGF0cy5odG1sIj5TdGF0aXN0aWNzPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvY29udGVudC5odG1sIj5Db250ZW50IG5lZ290aWF0aW9uPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvb2FpcG1oLmh0bWwiPk9BSS1QTUg8L2E+PC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0nY29sLW1kLTMgY29sLXNtLTQnPgogICAgICAgICAgPGg0PlJlc291cmNlczwvaDQ+CiAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3NjaGVtYS5kYXRhY2l0ZS5vcmciPk1ldGFkYXRhIHNjaGVtYTwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zdXBwb3J0LmRhdGFjaXRlLm9yZyI+U3VwcG9ydDwvYT48L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICAgIDxoND5Db21tdW5pdHk8L2g0PgogICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL21lbWJlcnMuaHRtbCI+TWVtYmVyczwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL3BhcnRuZXJzLmh0bWwiPlBhcnRuZXJzPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvc3RlZXJpbmcuaHRtbCI+U3RlZXJpbmcgZ3JvdXBzPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvZXZlbnRzLmh0bWwiPkV2ZW50czwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL3JvYWRtYXAuaHRtbCI+Um9hZG1hcDwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL3VzZXItc3Rvcmllcy5odG1sIj5Vc2VyIFN0b3JpZXM8L2E+PC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0nY29sLW1kLTMnPgogICAgICAgICAgPGg0IGNsYXNzPSJzaGFyZSI+Q29udGFjdCB1czwvaDQ+CiAgICAgICAgICA8YSBocmVmPSdtYWlsdG86c3VwcG9ydEBkYXRhY2l0ZS5vcmcnIGNsYXNzPSJzaGFyZSI+CiAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1hdCc+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEgaHJlZj0naHR0cHM6Ly9ibG9nLmRhdGFjaXRlLm9yZy9mZWVkLnhtbCcgY2xhc3M9InNoYXJlIj4KICAgICAgICAgICAgPGkgY2xhc3M9J2ZhIGZhLXJzcyc+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEgaHJlZj0naHR0cHM6Ly90d2l0dGVyLmNvbS9kYXRhY2l0ZScgY2xhc3M9InNoYXJlIj4KICAgICAgICAgICAgPGkgY2xhc3M9J2ZhIGZhLXR3aXR0ZXInPjwvaT4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhIGhyZWY9J2h0dHBzOi8vZ2l0aHViLmNvbS9kYXRhY2l0ZS9kYXRhY2l0ZScgY2xhc3M9InNoYXJlIj4KICAgICAgICAgICAgPGkgY2xhc3M9J2ZhIGZhLWdpdGh1Yic+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEgaHJlZj0naHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2NvbXBhbnkvZGF0YWNpdGUnIGNsYXNzPSJzaGFyZSI+CiAgICAgICAgICAgIDxpIGNsYXNzPSdmYSBmYS1saW5rZWRpbic+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL3Rlcm1zLmh0bWwiPlRlcm1zIGFuZCBjb25kaXRpb25zPC9hPjwvbGk+CiAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy5kYXRhY2l0ZS5vcmcvcHJpdmFjeS5odG1sIj5Qcml2YWN5IHBvbGljeTwvYT48L2xpPgogICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuZGF0YWNpdGUub3JnL2Fja25vd2xlZGdtZW50cy5odG1sIj5BY2tub3dsZWRnZW1lbnRzPC9hPjwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgICAgPGEgaHJlZj0iaHR0cDovL3N0YXR1cy5kYXRhY2l0ZS5vcmciIHRhcmdldD0iX2JsYW5rIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbG9yLWRvdCI+PC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29sb3ItZGVzY3JpcHRpb24iPjwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Zvb3Rlcj4KICAgIDxzY3JpcHQgc3JjPSIvL2NvZGUuanF1ZXJ5LmNvbS9qcXVlcnktMi4xLjQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjMuNi9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL2Nkbi5zdGF0dXNwYWdlLmlvL3NlLXYyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Fzc2V0cy5kYXRhY2l0ZS5vcmcvamF2YXNjcmlwdHMvZGVmYXVsdC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iL2phdmFzY3JpcHRzL3JlYWRpbmdUaW1lLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iL2phdmFzY3JpcHRzL2luZGV4LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvamF2YXNjcmlwdHMvc2VhcmNoLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgaWQ9ImRzcS1jb3VudC1zY3IiIHNyYz0iLy9kYXRhY2l0ZS5kaXNxdXMuY29tL2NvdW50LmpzIiBhc3luYz48L3NjcmlwdD4KICAgIDxzY3JpcHQ+CiAgICAgIChmdW5jdGlvbihpLHMsbyxnLHIsYSxtKXtpWydHb29nbGVBbmFseXRpY3NPYmplY3QnXT1yO2lbcl09aVtyXXx8ZnVuY3Rpb24oKXsKICAgICAgKGlbcl0ucT1pW3JdLnF8fFtdKS5wdXNoKGFyZ3VtZW50cyl9LGlbcl0ubD0xKm5ldyBEYXRlKCk7YT1zLmNyZWF0ZUVsZW1lbnQobyksCiAgICAgIG09cy5nZXRFbGVtZW50c0J5VGFnTmFtZShvKVswXTthLmFzeW5jPTE7YS5zcmM9ZzttLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsbSkKICAgICAgfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCcvL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOwoKICAgICAgZ2EoJ2NyZWF0ZScsICdVQS0yMjgwNjE5Ni02JywgJ2F1dG8nKTsKICAgICAgZ2EoJ3NlbmQnLCAncGFnZXZpZXcnKTsKICAgIDwvc2NyaXB0PgogIDwvYm9keT4KPC9odG1sPgo=
    http_version: 
  recorded_at: Thu, 06 Sep 2018 07:22:39 GMT
recorded_with: VCR 3.0.3
