---
http_interactions:
- request:
    method: get
    uri: https://app.datacite.org/prefixes/10.1111
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma 4.0.5 - https://github.com/datacite/maremma
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 21 May 2018 15:00:33 GMT
      Content-Type:
      - application/vnd.api+json; charset=utf-8
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Anonymous-Consumer:
      - 'true'
      Cache-Control:
      - max-age=0, private, must-revalidate
      Vary:
      - Accept-Encoding, Origin
      Etag:
      - W/"189d84a86d7513841a239004bb567666"
      X-Runtime:
      - '0.584102'
      X-Request-Id:
      - 4786a1bc-5cc5-4d7d-8572-c07ca827c2d2
      X-Powered-By:
      - Phusion Passenger 5.3.1
      Server:
      - nginx/1.14.0 + Phusion Passenger 5.3.1
    body:
      encoding: ASCII-8BIT
      string: '{"data":{"id":"10.1111","type":"handles","attributes":{"registration-agency":"Crossref","created":null,"updated":"2016-09-21T20:45:34Z"},"relationships":{"clients":{"data":[]},"providers":{"data":[]}}}}'
    http_version: 
  recorded_at: Mon, 21 May 2018 15:00:33 GMT
- request:
    method: get
    uri: http://www.crossref.org/openurl/?format=unixref&id=doi:10.1111/nph.14619&noredirect=true&pid=tech@datacite.org
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma 4.0.5 - https://github.com/datacite/maremma
      Accept:
      - text/xml
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Apache-Coyote/1.1
      Crossref-Deployment-Name:
      - cr6-1
      Content-Type:
      - text/xml;charset=UTF-8
      Content-Language:
      - en-US
      Date:
      - Mon, 21 May 2018 15:00:33 GMT
      Connection:
      - close
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGRvaV9yZWNvcmRzPg0KICA8ZG9pX3JlY29yZCBvd25lcj0iMTAuMTExMSIgdGltZXN0YW1wPSIyMDE4LTA0LTE2IDA1OjI4OjQzIj4NCiAgICA8Y3Jvc3NyZWY+DQogICAgICA8am91cm5hbD4NCiAgICAgICAgPGpvdXJuYWxfbWV0YWRhdGEgbGFuZ3VhZ2U9ImVuIj4NCiAgICAgICAgICA8ZnVsbF90aXRsZT5OZXcgUGh5dG9sb2dpc3Q8L2Z1bGxfdGl0bGU+DQogICAgICAgICAgPGFiYnJldl90aXRsZT5OZXcgUGh5dG9sPC9hYmJyZXZfdGl0bGU+DQogICAgICAgICAgPGlzc24+MDAyODY0Nlg8L2lzc24+DQogICAgICAgIDwvam91cm5hbF9tZXRhZGF0YT4NCiAgICAgICAgPGpvdXJuYWxfaXNzdWU+DQogICAgICAgICAgPHB1YmxpY2F0aW9uX2RhdGUgbWVkaWFfdHlwZT0icHJpbnQiPg0KICAgICAgICAgICAgPG1vbnRoPjA1PC9tb250aD4NCiAgICAgICAgICAgIDx5ZWFyPjIwMTg8L3llYXI+DQogICAgICAgICAgPC9wdWJsaWNhdGlvbl9kYXRlPg0KICAgICAgICAgIDxqb3VybmFsX3ZvbHVtZT4NCiAgICAgICAgICAgIDx2b2x1bWU+MjE4PC92b2x1bWU+DQogICAgICAgICAgPC9qb3VybmFsX3ZvbHVtZT4NCiAgICAgICAgICA8aXNzdWU+MzwvaXNzdWU+DQogICAgICAgICAgPGRvaV9kYXRhPg0KICAgICAgICAgICAgPGRvaT4xMC4xMTExL25waC4yMDE4LjIxOC5pc3N1ZS0zPC9kb2k+DQogICAgICAgICAgICA8cmVzb3VyY2U+aHR0cDovL2RvaS53aWxleS5jb20vMTAuMTExMS9ucGguMjAxOC4yMTguaXNzdWUtMzwvcmVzb3VyY2U+DQogICAgICAgICAgPC9kb2lfZGF0YT4NCiAgICAgICAgPC9qb3VybmFsX2lzc3VlPg0KICAgICAgICA8am91cm5hbF9hcnRpY2xlIHB1YmxpY2F0aW9uX3R5cGU9ImZ1bGxfdGV4dCI+DQogICAgICAgICAgPHRpdGxlcz4NCiAgICAgICAgICAgIDx0aXRsZT5MaWZlIGFuZCBkZWF0aCBvZiBwcm90ZWlucyBhZnRlciBwcm90ZWFzZSBjbGVhdmFnZTogcHJvdGVpbiBkZWdyYWRhdGlvbiBieSB0aGUgTi1lbmQgcnVsZSBwYXRod2F5PC90aXRsZT4NCiAgICAgICAgICA8L3RpdGxlcz4NCiAgICAgICAgICA8Y29udHJpYnV0b3JzPg0KICAgICAgICAgICAgPHBlcnNvbl9uYW1lIGNvbnRyaWJ1dG9yX3JvbGU9ImF1dGhvciIgc2VxdWVuY2U9ImZpcnN0Ij4NCiAgICAgICAgICAgICAgPGdpdmVuX25hbWU+TmljbzwvZ2l2ZW5fbmFtZT4NCiAgICAgICAgICAgICAgPHN1cm5hbWU+RGlzc21leWVyPC9zdXJuYW1lPg0KICAgICAgICAgICAgICA8YWZmaWxpYXRpb24+SW5kZXBlbmRlbnQgSnVuaW9yIFJlc2VhcmNoIEdyb3VwIG9uIFByb3RlaW4gUmVjb2duaXRpb24gYW5kIERlZ3JhZGF0aW9uOyBMZWlibml6IEluc3RpdHV0ZSBvZiBQbGFudCBCaW9jaGVtaXN0cnkgKElQQik7IFdlaW5iZXJnIDMgSGFsbGUgKFNhYWxlKSBELTA2MTIwIEdlcm1hbnk8L2FmZmlsaWF0aW9uPg0KICAgICAgICAgICAgICA8YWZmaWxpYXRpb24+U2NpZW5jZUNhbXB1cyBIYWxsZSAtIFBsYW50LWJhc2VkIEJpb2Vjb25vbXk7IEJldHR5LUhlaW1hbm4tU3RyYXNzZSAzIEhhbGxlIChTYWFsZSkgRC0wNjEyMCBHZXJtYW55PC9hZmZpbGlhdGlvbj4NCiAgICAgICAgICAgICAgPE9SQ0lEPmh0dHA6Ly9vcmNpZC5vcmcvMDAwMC0wMDAyLTQxNTYtMzc2MTwvT1JDSUQ+DQogICAgICAgICAgICA8L3BlcnNvbl9uYW1lPg0KICAgICAgICAgICAgPHBlcnNvbl9uYW1lIGNvbnRyaWJ1dG9yX3JvbGU9ImF1dGhvciIgc2VxdWVuY2U9ImFkZGl0aW9uYWwiPg0KICAgICAgICAgICAgICA8Z2l2ZW5fbmFtZT5TdXNhbmE8L2dpdmVuX25hbWU+DQogICAgICAgICAgICAgIDxzdXJuYW1lPlJpdmFzPC9zdXJuYW1lPg0KICAgICAgICAgICAgICA8YWZmaWxpYXRpb24+TElQTTsgVW5pdmVyc2l0w6kgZGUgVG91bG91c2U7IElOUkE7IENOUlM7IENhc3RhbmV0LVRvbG9zYW4gMzEgMzI2IEZyYW5jZTwvYWZmaWxpYXRpb24+DQogICAgICAgICAgICA8L3BlcnNvbl9uYW1lPg0KICAgICAgICAgICAgPHBlcnNvbl9uYW1lIGNvbnRyaWJ1dG9yX3JvbGU9ImF1dGhvciIgc2VxdWVuY2U9ImFkZGl0aW9uYWwiPg0KICAgICAgICAgICAgICA8Z2l2ZW5fbmFtZT5FbW1hbnVlbGxlPC9naXZlbl9uYW1lPg0KICAgICAgICAgICAgICA8c3VybmFtZT5HcmFjaWV0PC9zdXJuYW1lPg0KICAgICAgICAgICAgICA8YWZmaWxpYXRpb24+RGVwYXJ0bWVudCBvZiBCaW9sb2d5OyBNYXlub290aCBVbml2ZXJzaXR5OyBNYXlub290aCBDby4gS2lsZGFyZSBJcmVsYW5kPC9hZmZpbGlhdGlvbj4NCiAgICAgICAgICAgICAgPE9SQ0lEPmh0dHA6Ly9vcmNpZC5vcmcvMDAwMC0wMDAzLTM1NDgtODIxMzwvT1JDSUQ+DQogICAgICAgICAgICA8L3BlcnNvbl9uYW1lPg0KICAgICAgICAgIDwvY29udHJpYnV0b3JzPg0KICAgICAgICAgIDxwdWJsaWNhdGlvbl9kYXRlIG1lZGlhX3R5cGU9InByaW50Ij4NCiAgICAgICAgICAgIDxtb250aD4wNTwvbW9udGg+DQogICAgICAgICAgICA8eWVhcj4yMDE4PC95ZWFyPg0KICAgICAgICAgIDwvcHVibGljYXRpb25fZGF0ZT4NCiAgICAgICAgICA8cHVibGljYXRpb25fZGF0ZSBtZWRpYV90eXBlPSJvbmxpbmUiPg0KICAgICAgICAgICAgPG1vbnRoPjA2PC9tb250aD4NCiAgICAgICAgICAgIDxkYXk+MDU8L2RheT4NCiAgICAgICAgICAgIDx5ZWFyPjIwMTc8L3llYXI+DQogICAgICAgICAgPC9wdWJsaWNhdGlvbl9kYXRlPg0KICAgICAgICAgIDxwYWdlcz4NCiAgICAgICAgICAgIDxmaXJzdF9wYWdlPjkyOTwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDxsYXN0X3BhZ2U+OTM1PC9sYXN0X3BhZ2U+DQogICAgICAgICAgPC9wYWdlcz4NCiAgICAgICAgICA8Y3Jvc3NtYXJrPg0KICAgICAgICAgICAgPGNyb3NzbWFya19wb2xpY3k+MTAuMTAwMi9jcm9zc21hcmtfcG9saWN5PC9jcm9zc21hcmtfcG9saWN5Pg0KICAgICAgICAgICAgPGNyb3NzbWFya19kb21haW5zPg0KICAgICAgICAgICAgICA8Y3Jvc3NtYXJrX2RvbWFpbj4NCiAgICAgICAgICAgICAgICA8ZG9tYWluPndpbGV5LmNvbTwvZG9tYWluPg0KICAgICAgICAgICAgICA8L2Nyb3NzbWFya19kb21haW4+DQogICAgICAgICAgICA8L2Nyb3NzbWFya19kb21haW5zPg0KICAgICAgICAgICAgPGNyb3NzbWFya19kb21haW5fZXhjbHVzaXZlPnRydWU8L2Nyb3NzbWFya19kb21haW5fZXhjbHVzaXZlPg0KICAgICAgICAgICAgPGN1c3RvbV9tZXRhZGF0YT4NCiAgICAgICAgICAgICAgPHByb2dyYW0gbmFtZT0iZnVuZHJlZiI+DQogICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZXJfbmFtZSI+DQogICAgICAgICAgICAgICAgICAgIEFnZW5jZSBOYXRpb25hbGUgZGUgbGEgUmVjaGVyY2hlDQogICAgICAgICAgICAgICAgICAgIDxhc3NlcnRpb24gbmFtZT0iZnVuZGVyX2lkZW50aWZpZXIiPmh0dHA6Ly9keC5kb2kub3JnLzEwLjEzMDM5LzUwMTEwMDAwMTY2NTwvYXNzZXJ0aW9uPg0KICAgICAgICAgICAgICAgICAgPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImF3YXJkX251bWJlciI+QU5SLTEwLUxBQlgtNDE8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICAgIDxhc3NlcnRpb24gbmFtZT0iYXdhcmRfbnVtYmVyIj5BTlItMTEtSURFWC0wMDAyLTAyPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZXJfbmFtZSI+DQogICAgICAgICAgICAgICAgICAgIERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUsIEZvb2QgYW5kIHRoZSBNYXJpbmUNCiAgICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZXJfaWRlbnRpZmllciI+aHR0cDovL2R4LmRvaS5vcmcvMTAuMTMwMzkvNTAxMTAwMDAxNTg0PC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgICA8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICAgIDxhc3NlcnRpb24gbmFtZT0iYXdhcmRfbnVtYmVyIj4xNC9TLzgxOTwvYXNzZXJ0aW9uPg0KICAgICAgICAgICAgICAgIDwvYXNzZXJ0aW9uPg0KICAgICAgICAgICAgICAgIDxhc3NlcnRpb24gbmFtZT0iZnVuZGdyb3VwIj4NCiAgICAgICAgICAgICAgICAgIDxhc3NlcnRpb24gbmFtZT0iZnVuZGVyX25hbWUiPg0KICAgICAgICAgICAgICAgICAgICBTY2llbmNlIEZvdW5kYXRpb24gSXJlbGFuZA0KICAgICAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImZ1bmRlcl9pZGVudGlmaWVyIj5odHRwOi8vZHguZG9pLm9yZy8xMC4xMzAzOS81MDExMDAwMDE2MDI8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICAgIDwvYXNzZXJ0aW9uPg0KICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJhd2FyZF9udW1iZXIiPjEzL0lBLzE4NzA8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICA8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImZ1bmRncm91cCI+DQogICAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImZ1bmRlcl9uYW1lIj5WaXJ0dWFsIElyaXNoIENlbnRyZSBmb3IgQ3JvcCBJbXByb3ZlbWVudDwvYXNzZXJ0aW9uPg0KICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJhd2FyZF9udW1iZXIiPjE0L1MvODE5PC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZXJfbmFtZSI+DQogICAgICAgICAgICAgICAgICAgIEV1cm9wZWFuIFJlZ2lvbmFsIERldmVsb3BtZW50IEZ1bmQNCiAgICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJmdW5kZXJfaWRlbnRpZmllciI+aHR0cDovL2R4LmRvaS5vcmcvMTAuMTMwMzkvNTAxMTAwMDA4NTMwPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgICA8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICAgIDxhc3NlcnRpb24gbmFtZT0iYXdhcmRfbnVtYmVyIj5MU1AtVFAyLTE8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICA8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImZ1bmRncm91cCI+DQogICAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImZ1bmRlcl9uYW1lIj4NCiAgICAgICAgICAgICAgICAgICAgRGV1dHNjaGUgRm9yc2NodW5nc2dlbWVpbnNjaGFmdA0KICAgICAgICAgICAgICAgICAgICA8YXNzZXJ0aW9uIG5hbWU9ImZ1bmRlcl9pZGVudGlmaWVyIj5odHRwOi8vZHguZG9pLm9yZy8xMC4xMzAzOS81MDExMDAwMDE2NTk8L2Fzc2VydGlvbj4NCiAgICAgICAgICAgICAgICAgIDwvYXNzZXJ0aW9uPg0KICAgICAgICAgICAgICAgICAgPGFzc2VydGlvbiBuYW1lPSJhd2FyZF9udW1iZXIiPkRJIDE3OTQvMy0xPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgICAgPC9hc3NlcnRpb24+DQogICAgICAgICAgICAgIDwvcHJvZ3JhbT4NCiAgICAgICAgICAgICAgPHByb2dyYW0gbmFtZT0iQWNjZXNzSW5kaWNhdG9ycyI+DQogICAgICAgICAgICAgICAgPGxpY2Vuc2VfcmVmIGFwcGxpZXNfdG89InRkbSI+aHR0cDovL2RvaS53aWxleS5jb20vMTAuMTAwMi90ZG1fbGljZW5zZV8xLjE8L2xpY2Vuc2VfcmVmPg0KICAgICAgICAgICAgICAgIDxsaWNlbnNlX3JlZiBhcHBsaWVzX3RvPSJ2b3IiIHN0YXJ0X2RhdGU9IjIwMTctMDYtMDUiPmh0dHA6Ly9vbmxpbmVsaWJyYXJ5LndpbGV5LmNvbS90ZXJtc0FuZENvbmRpdGlvbnMjdm9yPC9saWNlbnNlX3JlZj4NCiAgICAgICAgICAgICAgPC9wcm9ncmFtPg0KICAgICAgICAgICAgPC9jdXN0b21fbWV0YWRhdGE+DQogICAgICAgICAgPC9jcm9zc21hcms+DQogICAgICAgICAgPGFyY2hpdmVfbG9jYXRpb25zPg0KICAgICAgICAgICAgPGFyY2hpdmUgbmFtZT0iUG9ydGljbyIgLz4NCiAgICAgICAgICA8L2FyY2hpdmVfbG9jYXRpb25zPg0KICAgICAgICAgIDxkb2lfZGF0YT4NCiAgICAgICAgICAgIDxkb2k+MTAuMTExMS9ucGguMTQ2MTk8L2RvaT4NCiAgICAgICAgICAgIDxyZXNvdXJjZT5odHRwOi8vZG9pLndpbGV5LmNvbS8xMC4xMTExL25waC4xNDYxOTwvcmVzb3VyY2U+DQogICAgICAgICAgICA8Y29sbGVjdGlvbiBwcm9wZXJ0eT0iY3Jhd2xlci1iYXNlZCI+DQogICAgICAgICAgICAgIDxpdGVtIGNyYXdsZXI9ImlQYXJhZGlnbXMiPg0KICAgICAgICAgICAgICAgIDxyZXNvdXJjZT5odHRwOi8vb25saW5lbGlicmFyeS53aWxleS5jb20vd29sMS9kb2kvMTAuMTExMS9ucGguMTQ2MTkvZnVsbHBkZjwvcmVzb3VyY2U+DQogICAgICAgICAgICAgIDwvaXRlbT4NCiAgICAgICAgICAgIDwvY29sbGVjdGlvbj4NCiAgICAgICAgICAgIDxjb2xsZWN0aW9uIHByb3BlcnR5PSJ0ZXh0LW1pbmluZyI+DQogICAgICAgICAgICAgIDxpdGVtPg0KICAgICAgICAgICAgICAgIDxyZXNvdXJjZSBjb250ZW50X3ZlcnNpb249InZvciIgbWltZV90eXBlPSJhcHBsaWNhdGlvbi9wZGYiPmh0dHBzOi8vYXBpLndpbGV5LmNvbS9vbmxpbmVsaWJyYXJ5L3RkbS92MS9hcnRpY2xlcy8xMC4xMTExJTJGbnBoLjE0NjE5PC9yZXNvdXJjZT4NCiAgICAgICAgICAgICAgPC9pdGVtPg0KICAgICAgICAgICAgPC9jb2xsZWN0aW9uPg0KICAgICAgICAgIDwvZG9pX2RhdGE+DQogICAgICAgICAgPGNpdGF0aW9uX2xpc3Q+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDAxfG5waDE0NjE5LWNpdC0wMDAxIj4NCiAgICAgICAgICAgICAgPGF1dGhvcj5CaWVudmVudXQ8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTU8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAwMi9wbWljLjIwMTUwMDAyNzwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5Qcm90ZW9tZS13aWRlIGFuYWx5c2lzIG9mIHRoZSBhbWlubyB0ZXJtaW5hbCBzdGF0dXMgb2YgRXNjaGVyaWNoaWEgY29saSBwcm90ZWlucyBhdCB0aGUgc3RlYWR5LXN0YXRlIGFuZCB1cG9uIGRlZm9ybXlsYXRpb24gaW5oaWJpdGlvbjwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+UHJvdGVvbWljczwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xNTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yNTAzPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMDJ8bnBoMTQ2MTktY2l0LTAwMDIiPg0KICAgICAgICAgICAgICA8YXV0aG9yPkJyb3dlcjwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxMzwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDE2L2oubW9sY2VsLjIwMTMuMDIuMDA5PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPk5ldXJvZGVnZW5lcmF0aW9uLWFzc29jaWF0ZWQgcHJvdGVpbiBmcmFnbWVudHMgYXMgc2hvcnQtbGl2ZWQgc3Vic3RyYXRlcyBvZiB0aGUgTi1lbmQgcnVsZSBwYXRod2F5PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5Nb2xlY3VsYXIgQ2VsbDwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT41MDwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4xNjE8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAwM3xucGgxNDYxOS1jaXQtMDAwMyI+DQogICAgICAgICAgICAgIDxhdXRob3I+Q2Fsdm88L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTc8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTA3NC9tY3AuTTExNi4wNjM4MTg8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+Q29tcGFyYXRpdmUgYW5hbHlzaXMgb2YgbWl0b2Nob25kcmlhbCBOLXRlcm1pbmkgZnJvbSBtb3VzZSwgaHVtYW4sIGFuZCB5ZWFzdDwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+TW9sZWN1bGFyICZhbXA7IENlbGx1bGFyIFByb3Rlb21pY3M8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTY8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+NTEyPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMDR8bnBoMTQ2MTktY2l0LTAwMDQiPg0KICAgICAgICAgICAgICA8YXV0aG9yPkNoZW48L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTc8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTEyNi9zY2llbmNlLmFhbDM2NTU8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+QW4gTi1lbmQgcnVsZSBwYXRod2F5IHRoYXQgcmVjb2duaXplcyBwcm9saW5lIGFuZCBkZXN0cm95cyBnbHVjb25lb2dlbmljIGVuenltZXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlNjaWVuY2U8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MzU1PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPmVhYUkzNjU1PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMDV8bnBoMTQ2MTktY2l0LTAwMDUiPg0KICAgICAgICAgICAgICA8YXV0aG9yPkNoaXNob2xtPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDA1PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwNzMvcG5hcy4wNDA5NDY4MTAyPC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPk1vbGVjdWxhciBjaGFyYWN0ZXJpemF0aW9uIG9mIHByb3Rlb2x5dGljIGNsZWF2YWdlIHNpdGVzIG9mIHRoZSBQc2V1ZG9tb25hcyBzeXJpbmdhZSBlZmZlY3RvciBBdnJScHQyPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5Qcm9jZWVkaW5ncyBvZiB0aGUgTmF0aW9uYWwgQWNhZGVteSBvZiBTY2llbmNlcywgVVNBPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjEwMjwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yMDg3PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMDZ8bnBoMTQ2MTktY2l0LTAwMDYiPg0KICAgICAgICAgICAgICA8YXV0aG9yPkRpdHplbDwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAwMzwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDM4L25jYjk4NDwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5EZWdyYWRhdGlvbiBvZiBESUFQMSBieSB0aGUgTi1lbmQgcnVsZSBwYXRod2F5IGlzIGVzc2VudGlhbCBmb3IgcmVndWxhdGluZyBhcG9wdG9zaXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPk5hdHVyZSBDZWxsIEJpb2xvZ3k8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+NTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT40Njc8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAwN3xucGgxNDYxOS1jaXQtMDAwNyI+DQogICAgICAgICAgICAgIDxhdXRob3I+RG9uZzwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNzwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTAxL2dhZC4yOTIyMzUuMTE2PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlViaXF1aXR5bGF0aW9uIGFjdGl2YXRlcyBhIHBlcHRpZGFzZSB0aGF0IHByb21vdGVzIGNsZWF2YWdlIGFuZCBkZXN0YWJpbGl6YXRpb24gb2YgaXRzIGFjdGl2YXRpbmcgRTMgbGlnYXNlcyBhbmQgZGl2ZXJzZSBncm93dGggcmVndWxhdG9yeSBwcm90ZWlucyB0byBsaW1pdCBjZWxsIHByb2xpZmVyYXRpb24gaW4gQXJhYmlkb3BzaXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPkdlbmVzICZhbXA7IERldmVsb3BtZW50PC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjMxPC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjE5NzwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDA4fG5waDE0NjE5LWNpdC0wMDA4Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5Fc2NoZW4tTGlwcG9sZDwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNjwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTA0L3BwLjE2LjAwMzM2PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPkJhY3RlcmlhbCBBdnJScHQyLWxpa2UgY3lzdGVpbmUgcHJvdGVhc2VzIGJsb2NrIGFjdGl2YXRpb24gb2YgdGhlIEFyYWJpZG9wc2lzIG1pdG9nZW4tYWN0aXZhdGVkIHByb3RlaW4ga2luYXNlcywgTVBLNCBhbmQgTVBLMTE8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlBsYW50IFBoeXNpb2xvZ3k8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTcxPC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjIyMjM8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAwOXxucGgxNDYxOS1jaXQtMDAwOSI+DQogICAgICAgICAgICAgIDxhdXRob3I+RmFkZW48L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTY8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9uY29tbXMxMjIwMjwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5QaGVub3R5cGVzIG9uIGRlbWFuZCB2aWEgc3dpdGNoYWJsZSB0YXJnZXQgcHJvdGVpbiBkZWdyYWRhdGlvbiBpbiBtdWx0aWNlbGx1bGFyIG9yZ2FuaXNtczwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+TmF0dXJlIENvbW11bmljYXRpb25zPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjc8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MTIyMDI8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAxMHxucGgxNDYxOS1jaXQtMDAxMCI+DQogICAgICAgICAgICAgIDxhdXRob3I+R2Fyem9uPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDA3PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwMTYvai5mZWJzbGV0LjIwMDcuMDYuMDA1PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlBSVDYvQXQ1ZzAyMzEwIGVuY29kZXMgYW4gQXJhYmlkb3BzaXMgdWJpcXVpdGluIGxpZ2FzZSBvZiB0aGUgTi1lbmQgcnVsZSBwYXRod2F5IHdpdGggYXJnaW5pbmUgc3BlY2lmaWNpdHkgYW5kIGlzIG5vdCB0aGUgQ0VSMyBsb2N1czwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+RkVCUyBMZXR0ZXJzPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjU4MTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4zMTg5PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMTF8bnBoMTQ2MTktY2l0LTAwMTEiPg0KICAgICAgICAgICAgICA8YXV0aG9yPkdldmFlcnQ8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMDM8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9uYnQ4MTA8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+RXhwbG9yaW5nIHByb3Rlb21lcyBhbmQgYW5hbHl6aW5nIHByb3RlaW4gcHJvY2Vzc2luZyBieSBtYXNzIHNwZWN0cm9tZXRyaWMgaWRlbnRpZmljYXRpb24gb2Ygc29ydGVkIE4tdGVybWluYWwgcGVwdGlkZXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPk5hdHVyZSBCaW90ZWNobm9sb2d5PC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjIxPC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjU2NjwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDEyfG5waDE0NjE5LWNpdC0wMDEyIj4NCiAgICAgICAgICAgICAgPGF1dGhvcj5HaWJiczwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNDwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDE2L2oudGNiLjIwMTQuMDUuMDAxPC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlRoZSBldWthcnlvdGljIE4tZW5kIHJ1bGUgcGF0aHdheTogY29uc2VydmVkIG1lY2hhbmlzbXMgYW5kIGRpdmVyc2UgZnVuY3Rpb25zPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5UcmVuZHMgaW4gQ2VsbCBCaW9sb2d5PC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjI0PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjYwMzwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDEzfG5waDE0NjE5LWNpdC0wMDEzIj4NCiAgICAgICAgICAgICAgPGF1dGhvcj5HaWJiczwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNjwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTExL25waC4xNDEwNTwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5Gcm9tIHN0YXJ0IHRvIGZpbmlzaDogYW1pbm8tdGVybWluYWwgcHJvdGVpbiBtb2RpZmljYXRpb25zIGFzIGRlZ3JhZGF0aW9uIHNpZ25hbHMgaW4gcGxhbnRzPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5OZXcgUGh5dG9sb2dpc3Q8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MjExPC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjExODg8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAxNHxucGgxNDYxOS1jaXQtMDAxNCI+DQogICAgICAgICAgICAgIDxhdXRob3I+R2liYnM8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTE8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9uYXR1cmUxMDUzNDwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5Ib21lb3N0YXRpYyByZXNwb25zZSB0byBoeXBveGlhIGlzIHJlZ3VsYXRlZCBieSB0aGUgTi1lbmQgcnVsZSBwYXRod2F5IGluIHBsYW50czwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+TmF0dXJlPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjQ3OTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT40MTU8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAxNXxucGgxNDYxOS1jaXQtMDAxNSI+DQogICAgICAgICAgICAgIDxhdXRob3I+R3Jhdm90PC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE2PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjExODYvczEyODcwLTAxNi0wOTQxLXk8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+SHlwb3hpYSByZXNwb25zZSBpbiBBcmFiaWRvcHNpcyByb290cyBpbmZlY3RlZCBieSBQbGFzbW9kaW9waG9yYSBicmFzc2ljYWUgc3VwcG9ydHMgdGhlIGRldmVsb3BtZW50IG9mIGNsdWJyb290PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5CTUMgUGxhbnQgQmlvbG9neTwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xNjwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yNTE8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAxNnxucGgxNDYxOS1jaXQtMDAxNiI+DQogICAgICAgICAgICAgIDxhdXRob3I+SGFtbWVybGU8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjE5OTg8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTA3NC9qYmMuMjczLjM5LjI1MDAwPC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlByb3RlaW5zIG9mIG5ld2x5IGlzb2xhdGVkIG11dGFudHMgYW5kIHRoZSBhbWluby10ZXJtaW5hbCBwcm9saW5lIGFyZSBlc3NlbnRpYWwgZm9yIHViaXF1aXRpbi1wcm90ZWFzb21lLWNhdGFseXplZCBjYXRhYm9saXRlIGRlZ3JhZGF0aW9uIG9mIGZydWN0b3NlLTEsNi1iaXNwaG9zcGhhdGFzZSBvZiBTYWNjaGFyb215Y2VzIGNlcmV2aXNpYWU8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPkpvdXJuYWwgb2YgQmlvbG9naWNhbCBDaGVtaXN0cnk8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MjczPC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjI1MDAwPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMTd8bnBoMTQ2MTktY2l0LTAwMTciPg0KICAgICAgICAgICAgICA8YXV0aG9yPkhvZXJuc3RlaW48L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTY8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTA3NC9tY3AuTTExNS4wNTcxOTA8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+SWRlbnRpZmljYXRpb24gb2YgdGFyZ2V0cyBhbmQgaW50ZXJhY3Rpb24gcGFydG5lcnMgb2YgYXJnaW55bC10Uk5BIHByb3RlaW4gdHJhbnNmZXJhc2UgaW4gdGhlIG1vc3MgUGh5c2NvbWl0cmVsbGEgcGF0ZW5zPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5Nb2xlY3VsYXIgJmFtcDsgQ2VsbHVsYXIgUHJvdGVvbWljczwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xNTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4xODA4PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMTh8bnBoMTQ2MTktY2l0LTAwMTgiPg0KICAgICAgICAgICAgICA8YXV0aG9yPkh1ZXNnZW48L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTI8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTExMS9qLjEzOTktMzA1NC4yMDExLjAxNTM2Lng8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+Ti0gYW5kIEMtdGVybWluYWwgZGVncmFkb21pY3M6IG5ldyBhcHByb2FjaGVzIHRvIHJldmVhbCBiaW9sb2dpY2FsIHJvbGVzIGZvciBwbGFudCBwcm90ZWFzZXMgZnJvbSBzdWJzdHJhdGUgaWRlbnRpZmljYXRpb248L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlBoeXNpb2xvZ2lhIFBsYW50YXJ1bTwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xNDU8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+NTwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDE5fG5waDE0NjE5LWNpdC0wMDE5Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5Id2FuZzwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxMDwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTI2L3NjaWVuY2UuMTE4MzE0NzwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5OLXRlcm1pbmFsIGFjZXR5bGF0aW9uIG9mIGNlbGx1bGFyIHByb3RlaW5zIGNyZWF0ZXMgc3BlY2lmaWMgZGVncmFkYXRpb24gc2lnbmFsczwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+U2NpZW5jZTwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4zMjc8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+OTczPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMjB8bnBoMTQ2MTktY2l0LTAwMjAiPg0KICAgICAgICAgICAgICA8YXV0aG9yPktpbTwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNDwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDE2L2ouY2VsbC4yMDEzLjExLjAzMTwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5UaGUgTi10ZXJtaW5hbCBtZXRoaW9uaW5lIG9mIGNlbGx1bGFyIHByb3RlaW5zIGFzIGEgZGVncmFkYXRpb24gc2lnbmFsPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5DZWxsPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjE1Njwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4xNTg8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAyMXxucGgxNDYxOS1jaXQtMDAyMSI+DQogICAgICAgICAgICAgIDxhdXRob3I+S2xlaWZlbGQ8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTA8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9uYnQuMTYxMTwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5Jc290b3BpYyBsYWJlbGluZyBvZiB0ZXJtaW5hbCBhbWluZXMgaW4gY29tcGxleCBzYW1wbGVzIGlkZW50aWZpZXMgcHJvdGVpbiBOLXRlcm1pbmkgYW5kIHByb3RlYXNlIGNsZWF2YWdlIHByb2R1Y3RzPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5OYXR1cmUgQmlvdGVjaG5vbG9neTwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4yODwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yODE8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAyMnxucGgxNDYxOS1jaXQtMDAyMiI+DQogICAgICAgICAgICAgIDxhdXRob3I+TGVlPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE2PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjE0MzQ4L21vbGNlbGxzLjIwMTYuMjMyOTwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5OLXRlcm1pbmFsIGFjZXR5bGF0aW9uLXRhcmdldGVkIE4tZW5kIHJ1bGUgcHJvdGVvbHl0aWMgc3lzdGVtOiB0aGUgQWMvTi1lbmQgcnVsZSBwYXRod2F5PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5Nb2xlY3VsZXMgYW5kIENlbGxzPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjM5PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjE2OTwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDIzfG5waDE0NjE5LWNpdC0wMDIzIj4NCiAgICAgICAgICAgICAgPGF1dGhvcj5MaTwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNzwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTA1L3RwYy4xNi4wMDc2ODwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5Qcm90ZWluIGRlZ3JhZGF0aW9uIHJhdGUgaW4gQXJhYmlkb3BzaXMgdGhhbGlhbmEgbGVhZiBncm93dGggYW5kIGRldmVsb3BtZW50PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5QbGFudCBDZWxsPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjI5PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjIwNzwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDI0fG5waDE0NjE5LWNpdC0wMDI0Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5NYWpvdnNreTwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNDwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDIxL3ByNTAwMTY0ajwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5UYXJnZXRlZCBwcm90ZW9taWNzIGFuYWx5c2lzIG9mIHByb3RlaW4gZGVncmFkYXRpb24gaW4gcGxhbnQgc2lnbmFsaW5nIG9uIGFuIExUUS1PcmJpdHJhcCBtYXNzIHNwZWN0cm9tZXRlcjwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+Sm91cm5hbCBvZiBQcm90ZW9tZSBSZXNlYXJjaDwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xMzwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT40MjQ2PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMjV8bnBoMTQ2MTktY2l0LTAwMjUiPg0KICAgICAgICAgICAgICA8YXV0aG9yPk1hcmNoaTwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNjwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDM4L3NyZXAyNjAyMDwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5UaGUgTi1lbmQgcnVsZSBwYXRod2F5IHJlZ3VsYXRlcyBwYXRob2dlbiByZXNwb25zZXMgaW4gcGxhbnRzPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5TY2llbnRpZmljIFJlcG9ydHM8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+Njwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yNjAyMDwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDI2fG5waDE0NjE5LWNpdC0wMDI2Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5NZW5kaW9uZG88L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTY8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTExMS9wYmkuMTIzMzQ8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+RW5oYW5jZWQgd2F0ZXJsb2dnaW5nIHRvbGVyYW5jZSBpbiBiYXJsZXkgYnkgbWFuaXB1bGF0aW9uIG9mIGV4cHJlc3Npb24gb2YgdGhlIE4tZW5kIHJ1bGUgcGF0aHdheSBFMyBsaWdhc2UgUFJPVEVPTFlTSVM2PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5QbGFudCBCaW90ZWNobm9sb2d5IEpvdXJuYWw8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTQ8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+NDA8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAyN3xucGgxNDYxOS1jaXQtMDAyNyI+DQogICAgICAgICAgICAgIDxhdXRob3I+TW90PC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE4PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjExMTEvbnBoLjE0NDk3PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlJlYWwtdGltZSBkZXRlY3Rpb24gb2YgTi1lbmQgcnVsZS1tZWRpYXRlZCB1YmlxdWl0aW5hdGlvbiB2aWEgZmx1b3Jlc2NlbnRseSBsYWJlbGVkIHN1YnN0cmF0ZSBwcm9iZXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPk5ldyBQaHl0b2xvZ2lzdDwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4yMTc8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+NjEzPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwMjh8bnBoMTQ2MTktY2l0LTAwMjgiPg0KICAgICAgICAgICAgICA8YXV0aG9yPk5pc2hpbXVyYTwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxMzwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTA1L3RwYy4xMTMuMTEyNTU3PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPkNscFMxIGlzIGEgY29uc2VydmVkIHN1YnN0cmF0ZSBzZWxlY3RvciBmb3IgdGhlIGNobG9yb3BsYXN0IENscCBwcm90ZWFzZSBzeXN0ZW0gaW4gQXJhYmlkb3BzaXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlBsYW50IENlbGw8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MjU8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MjI3NjwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDI5fG5waDE0NjE5LWNpdC0wMDI5Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5OaXNoaW11cmE8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTU8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAxNi9qLmJiYWJpby4yMDE0LjExLjAxMjwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5Pcmdhbml6YXRpb24sIGZ1bmN0aW9uIGFuZCBzdWJzdHJhdGVzIG9mIHRoZSBlc3NlbnRpYWwgQ2xwIHByb3RlYXNlIHN5c3RlbSBpbiBwbGFzdGlkczwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+QmlvY2hpbWljYSBldCBCaW9waHlzaWNhIEFjdGE8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTg0Nzwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT45MTU8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAzMHxucGgxNDYxOS1jaXQtMDAzMCI+DQogICAgICAgICAgICAgIDxhdXRob3I+UGlhdGtvdjwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxMmE8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTA3My9wbmFzLjEyMDc3ODYxMDk8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+VGhlIE4tZW5kIHJ1bGUgcGF0aHdheSBjb3VudGVyYWN0cyBjZWxsIGRlYXRoIGJ5IGRlc3Ryb3lpbmcgcHJvYXBvcHRvdGljIHByb3RlaW4gZnJhZ21lbnRzPC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5Qcm9jZWVkaW5ncyBvZiB0aGUgTmF0aW9uYWwgQWNhZGVteSBvZiBTY2llbmNlcywgVVNBPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjEwOTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT5FMTgzOTwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDMxfG5waDE0NjE5LWNpdC0wMDMxIj4NCiAgICAgICAgICAgICAgPGF1dGhvcj5QaWF0a292PC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDEyYjwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDE2L2oubW9sY2VsLjIwMTIuMTAuMDEyPC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlRoZSBhdXRvLWdlbmVyYXRlZCBmcmFnbWVudCBvZiB0aGUgVXNwMSBkZXViaXF1aXR5bGFzZSBpcyBhIHBoeXNpb2xvZ2ljYWwgc3Vic3RyYXRlIG9mIHRoZSBOLWVuZCBydWxlIHBhdGh3YXk8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPk1vbGVjdWxhciBDZWxsPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjQ4PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjkyNjwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDMyfG5waDE0NjE5LWNpdC0wMDMyIj4NCiAgICAgICAgICAgICAgPGF1dGhvcj5Qb3R1c2NoYWs8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjE5OTg8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTA3My9wbmFzLjk1LjE0Ljc5MDQ8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+UFJUMSBvZiBBcmFiaWRvcHNpcyB0aGFsaWFuYSBlbmNvZGVzIGEgY29tcG9uZW50IG9mIHRoZSBwbGFudCBOLWVuZCBydWxlwqBwYXRod2F5PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5Qcm9jZWVkaW5ncyBvZiB0aGUgTmF0aW9uYWwgQWNhZGVteSBvZiBTY2llbmNlcywgVVNBPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjk1PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjc5MDQ8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAzM3xucGgxNDYxOS1jaXQtMDAzMyI+DQogICAgICAgICAgICAgIDxhdXRob3I+UmFvPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDAxPC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwMzgvMzUwNzM2Mjc8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+RGVncmFkYXRpb24gb2YgYSBjb2hlc2luIHN1YnVuaXQgYnkgdGhlIE4tZW5kIHJ1bGUgcGF0aHdheSBpcyBlc3NlbnRpYWwgZm9yIGNocm9tb3NvbWUgc3RhYmlsaXR5PC9hcnRpY2xlX3RpdGxlPg0KICAgICAgICAgICAgICA8am91cm5hbF90aXRsZT5OYXR1cmU8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+NDEwPC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjk1NTwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDM0fG5waDE0NjE5LWNpdC0wMDM0Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5SaWJlcjwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNTwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMTA0L3BwLjExNC4yNTMwODg8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+VGhlIGdyZWVuaW5nIGFmdGVyIGV4dGVuZGVkIGRhcmtuZXNzMSBpcyBhbiBOLWVuZCBydWxlIHBhdGh3YXkgbXV0YW50IHdpdGggaGlnaCB0b2xlcmFuY2UgdG8gc3VibWVyZ2VuY2UgYW5kIHN0YXJ2YXRpb248L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlBsYW50IFBoeXNpb2xvZ3k8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTY3PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjE2MTY8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAzNXxucGgxNDYxOS1jaXQtMDAzNSI+DQogICAgICAgICAgICAgIDxhdXRob3I+Um93bGFuZDwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAxNTwvY1llYXI+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlRoZSBBcmFiaWRvcHNpcyBjaGxvcm9wbGFzdCBzdHJvbWFsIE4tdGVybWlub21lOiBjb21wbGV4aXRpZXMgb2YgYW1pbm8tdGVybWluYWwgcHJvdGVpbiBtYXR1cmF0aW9uIGFuZCBzdGFiaWxpdHk8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlBsYW50IFBoeXNpb2xvZ3k8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTY5PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjE4ODE8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAzNnxucGgxNDYxOS1jaXQtMDAzNiI+DQogICAgICAgICAgICAgIDxhdXRob3I+U2FudHQ8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMDg8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTA5MS9tYmMuRTA4LTAzLTAzMjg8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+VGhlIHllYXN0IEdJRCBjb21wbGV4LCBhIG5vdmVsIHViaXF1aXRpbiBsaWdhc2UgKEUzKSBpbnZvbHZlZCBpbiB0aGUgcmVndWxhdGlvbiBvZiBjYXJib2h5ZHJhdGUgbWV0YWJvbGlzbTwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+TW9sZWN1bGFyIEJpb2xvZ3kgb2YgdGhlIENlbGw8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTk8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MzMyMzwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDM3fG5waDE0NjE5LWNpdC0wMDM3Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5TY2hpbGxpbmc8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTE8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9ucHJvdC4yMDEwLjE3ODwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5DaGFyYWN0ZXJpemF0aW9uIG9mIHRoZSBwcmltZSBhbmQgbm9uLXByaW1lIGFjdGl2ZSBzaXRlIHNwZWNpZmljaXRpZXMgb2YgcHJvdGVhc2VzIGJ5IHByb3Rlb21lLWRlcml2ZWQgcGVwdGlkZSBsaWJyYXJpZXMgYW5kIHRhbmRlbSBtYXNzIHNwZWN0cm9tZXRyeTwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+TmF0dXJlIFByb3RvY29sczwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT42PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjExMTwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDM4fG5waDE0NjE5LWNpdC0wMDM4Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5UYWtlbW90bzwvYXV0aG9yPg0KICAgICAgICAgICAgICA8Y1llYXI+MjAwNTwvY1llYXI+DQogICAgICAgICAgICAgIDxkb2kgcHJvdmlkZXI9ImNyb3NzcmVmIj4xMC4xMDk0L01QTUktMTgtMTI1ODwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5NZW1icmFuZSByZWxlYXNlIGFuZCBkZXN0YWJpbGl6YXRpb24gb2YgQXJhYmlkb3BzaXMgUklONCBmb2xsb3dpbmcgY2xlYXZhZ2UgYnkgUHNldWRvbW9uYXMgc3lyaW5nYWUgQXZyUnB0MjwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+TW9sZWN1bGFyIFBsYW50LU1pY3JvYmUgSW50ZXJhY3Rpb25zPC9qb3VybmFsX3RpdGxlPg0KICAgICAgICAgICAgICA8dm9sdW1lPjE4PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjEyNTg8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDAzOXxucGgxNDYxOS1jaXQtMDAzOSI+DQogICAgICAgICAgICAgIDxhdXRob3I+VGFzYWtpPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDEyPC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjExNDYvYW5udXJldi1iaW9jaGVtLTA1MTcxMC0wOTMzMDg8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+VGhlIE4tZW5kIHJ1bGUgcGF0aHdheTwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+QW5udWFsIFJldmlldyBvZiBCaW9jaGVtaXN0cnk8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+ODE8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MjYxPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDB8bnBoMTQ2MTktY2l0LTAwNDAiPg0KICAgICAgICAgICAgICA8YXV0aG9yPlRzaWF0c2lhbmk8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTM8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTEwNS90cGMuMTEzLjExNTI4NzwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5UaGUgQXJhYmlkb3BzaXMgTUVUQUNBU1BBU0U5IGRlZ3JhZG9tZTwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+UGxhbnQgQ2VsbDwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4yNTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yODMxPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDF8bnBoMTQ2MTktY2l0LTAwNDEiPg0KICAgICAgICAgICAgICA8YXV0aG9yPlZhcnNoYXZza3k8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTE8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAwMi9wcm8uNjY2PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlRoZSBOLWVuZCBydWxlIHBhdGh3YXkgYW5kIHJlZ3VsYXRpb24gYnkgcHJvdGVvbHlzaXM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlByb3RlaW4gU2NpZW5jZTwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4yMDwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4xMjk4PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDJ8bnBoMTQ2MTktY2l0LTAwNDIiPg0KICAgICAgICAgICAgICA8YXV0aG9yPlZlbm5lPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE1PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwMDIvcG1pYy4yMDE1MDAwMTQ8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+QW4gaW1wcm92ZWQgd29ya2Zsb3cgZm9yIHF1YW50aXRhdGl2ZSBOLXRlcm1pbmFsIGNoYXJnZS1iYXNlZCBmcmFjdGlvbmFsIGRpYWdvbmFsIGNocm9tYXRvZ3JhcGh5IChDaGFGUkFESUMpIHRvIHN0dWR5IHByb3Rlb2x5dGljIGV2ZW50cyBpbiBBcmFiaWRvcHNpcyB0aGFsaWFuYTwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+UHJvdGVvbWljczwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xNTwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4yNDU4PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDN8bnBoMTQ2MTktY2l0LTAwNDMiPg0KICAgICAgICAgICAgICA8YXV0aG9yPlZlbm5lPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDEzPC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwMjEvcHI0MDA0MzVkPC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPk5vdmVsIGhpZ2hseSBzZW5zaXRpdmUsIHNwZWNpZmljLCBhbmQgc3RyYWlnaHRmb3J3YXJkIHN0cmF0ZWd5IGZvciBjb21wcmVoZW5zaXZlIE4tdGVybWluYWwgcHJvdGVvbWljcyByZXZlYWxzIHVua25vd24gc3Vic3RyYXRlcyBvZiB0aGUgbWl0b2Nob25kcmlhbCBwZXB0aWRhc2UgSWNwNTU8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPkpvdXJuYWwgb2YgUHJvdGVvbWUgUmVzZWFyY2g8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTI8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MzgyMzwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgICA8Y2l0YXRpb24ga2V5PSIxMC4xMTExL25waC4xNDYxOS1CSUIwMDQ0fG5waDE0NjE5LWNpdC0wMDQ0Ij4NCiAgICAgICAgICAgICAgPGF1dGhvcj5Wb2d0bGU8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMDk8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAxNi9qLmNlbGwuMjAwOS4wNy4wNDU8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+R2xvYmFsIGFuYWx5c2lzIG9mIHRoZSBtaXRvY2hvbmRyaWFsIE4tcHJvdGVvbWUgaWRlbnRpZmllcyBhIHByb2Nlc3NpbmcgcGVwdGlkYXNlIGNyaXRpY2FsIGZvciBwcm90ZWluIHN0YWJpbGl0eTwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+Q2VsbDwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4xMzk8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+NDI4PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDV8bnBoMTQ2MTktY2l0LTAwNDUiPg0KICAgICAgICAgICAgICA8YXV0aG9yPldhZGFzPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE2PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwNzQvamJjLk0xMTYuNzQ3OTU2PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPkFuYWx5emluZyBOLXRlcm1pbmFsIGFyZ2lueWxhdGlvbiB0aHJvdWdoIHRoZSB1c2Ugb2YgcGVwdGlkZSBhcnJheXMgYW5kIGRlZ3JhZGF0aW9uIGFzc2F5czwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+Sm91cm5hbCBvZiBCaW9sb2dpY2FsIENoZW1pc3RyeTwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4yOTE8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MjA5NzY8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDA0NnxucGgxNDYxOS1jaXQtMDA0NiI+DQogICAgICAgICAgICAgIDxhdXRob3I+V2VpdHM8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTQ8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9uY29tbXM0NDI1PC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlBsYW50IGN5c3RlaW5lIG94aWRhc2VzIGNvbnRyb2wgdGhlIG94eWdlbi1kZXBlbmRlbnQgYnJhbmNoIG9mIHRoZSBOLWVuZC1ydWxlIHBhdGh3YXk8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPk5hdHVyZSBDb21tdW5pY2F0aW9uczwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT41PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjM0MjU8L2ZpcnN0X3BhZ2U+DQogICAgICAgICAgICA8L2NpdGF0aW9uPg0KICAgICAgICAgICAgPGNpdGF0aW9uIGtleT0iMTAuMTExMS9ucGguMTQ2MTktQklCMDA0N3xucGgxNDYxOS1jaXQtMDA0NyI+DQogICAgICAgICAgICAgIDxhdXRob3I+V2hpdGU8L2F1dGhvcj4NCiAgICAgICAgICAgICAgPGNZZWFyPjIwMTY8L2NZZWFyPg0KICAgICAgICAgICAgICA8ZG9pIHByb3ZpZGVyPSJjcm9zc3JlZiI+MTAuMTAzOC9uY29tbXMxNDY5MDwvZG9pPg0KICAgICAgICAgICAgICA8YXJ0aWNsZV90aXRsZT5QbGFudCBjeXN0ZWluZSBveGlkYXNlcyBhcmUgZGlveHlnZW5hc2VzIHRoYXQgZGlyZWN0bHkgZW5hYmxlIGFyZ2lueWwgdHJhbnNmZXJhc2UtY2F0YWx5emVkIGFyZ2lueWxhdGlvbiBvZiBOLWVuZCBydWxlIHRhcmdldHM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPk5hdHVyZSBDb21tdW5pY2F0aW9uczwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT44PC92b2x1bWU+DQogICAgICAgICAgICAgIDxmaXJzdF9wYWdlPjE0NjkwPC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDh8bnBoMTQ2MTktY2l0LTAwNDgiPg0KICAgICAgICAgICAgICA8YXV0aG9yPlh1PC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE1PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjExMDUvdHBjLjE1LjAwMTczPC9kb2k+DQogICAgICAgICAgICAgIDxhcnRpY2xlX3RpdGxlPlR3byBOLXRlcm1pbmFsIGFjZXR5bHRyYW5zZmVyYXNlcyBhbnRhZ29uaXN0aWNhbGx5IHJlZ3VsYXRlIHRoZSBzdGFiaWxpdHkgb2YgYSBub2QtbGlrZSByZWNlcHRvciBpbiBBcmFiaWRvcHNpczwvYXJ0aWNsZV90aXRsZT4NCiAgICAgICAgICAgICAgPGpvdXJuYWxfdGl0bGU+UGxhbnQgQ2VsbDwvam91cm5hbF90aXRsZT4NCiAgICAgICAgICAgICAgPHZvbHVtZT4yNzwvdm9sdW1lPg0KICAgICAgICAgICAgICA8Zmlyc3RfcGFnZT4xNTQ3PC9maXJzdF9wYWdlPg0KICAgICAgICAgICAgPC9jaXRhdGlvbj4NCiAgICAgICAgICAgIDxjaXRhdGlvbiBrZXk9IjEwLjExMTEvbnBoLjE0NjE5LUJJQjAwNDl8bnBoMTQ2MTktY2l0LTAwNDkiPg0KICAgICAgICAgICAgICA8YXV0aG9yPlpoYW5nPC9hdXRob3I+DQogICAgICAgICAgICAgIDxjWWVhcj4yMDE1PC9jWWVhcj4NCiAgICAgICAgICAgICAgPGRvaSBwcm92aWRlcj0iY3Jvc3NyZWYiPjEwLjEwMDIvcG1pYy4yMDE0MDA1MzA8L2RvaT4NCiAgICAgICAgICAgICAgPGFydGljbGVfdGl0bGU+UXVhbnRpdGF0aXZlIHByb3Rlb21pY3MgYW5hbHlzaXMgb2YgdGhlIEFyZy9OLWVuZCBydWxlIHBhdGh3YXkgb2YgdGFyZ2V0ZWQgZGVncmFkYXRpb24gaW4gQXJhYmlkb3BzaXMgcm9vdHM8L2FydGljbGVfdGl0bGU+DQogICAgICAgICAgICAgIDxqb3VybmFsX3RpdGxlPlByb3Rlb21pY3M8L2pvdXJuYWxfdGl0bGU+DQogICAgICAgICAgICAgIDx2b2x1bWU+MTU8L3ZvbHVtZT4NCiAgICAgICAgICAgICAgPGZpcnN0X3BhZ2U+MjQ0NzwvZmlyc3RfcGFnZT4NCiAgICAgICAgICAgIDwvY2l0YXRpb24+DQogICAgICAgICAgPC9jaXRhdGlvbl9saXN0Pg0KICAgICAgICA8L2pvdXJuYWxfYXJ0aWNsZT4NCiAgICAgIDwvam91cm5hbD4NCiAgICA8L2Nyb3NzcmVmPg0KICA8L2RvaV9yZWNvcmQ+DQo8L2RvaV9yZWNvcmRzPg==
    http_version: 
  recorded_at: Mon, 21 May 2018 15:00:33 GMT
recorded_with: VCR 3.0.3
