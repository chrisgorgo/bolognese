---
http_interactions:
- request:
    method: get
    uri: https://blog.datacite.org/eating-your-own-dog-food
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - https://github.com/datacite/maremma
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Access-Control-Allow-Methods:
      - GET, POST, PATCH, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Fri, 27 Oct 2017 04:33:56 GMT
      Location:
      - "/eating-your-own-dog-food/"
      Server:
      - openresty/1.11.2.2
      Via:
      - kong/0.10.3
      X-Amz-Error-Code:
      - Found
      X-Amz-Error-Message:
      - Resource Found
      X-Amz-Id-2:
      - 9mWcClhXk0Hlf3h9QVKY9LjnajsLOKc3yzmO9JEnK7w0VSfBaO8yg5WPg3UMKnZjwi7IAQZk9B0=
      X-Amz-Request-Id:
      - FAAC59CE413EDBDD
      X-Kong-Proxy-Latency:
      - '0'
      X-Kong-Upstream-Latency:
      - '283'
      Content-Length:
      - '313'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: |
        <html>
        <head><title>302 Moved Temporarily</title></head>
        <body>
        <h1>302 Moved Temporarily</h1>
        <ul>
        <li>Code: Found</li>
        <li>Message: Resource Found</li>
        <li>RequestId: FAAC59CE413EDBDD</li>
        <li>HostId: 9mWcClhXk0Hlf3h9QVKY9LjnajsLOKc3yzmO9JEnK7w0VSfBaO8yg5WPg3UMKnZjwi7IAQZk9B0=</li>
        </ul>
        <hr/>
        </body>
        </html>
    http_version: 
  recorded_at: Fri, 27 Oct 2017 04:33:50 GMT
- request:
    method: get
    uri: https://blog.datacite.org/eating-your-own-dog-food/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - https://github.com/datacite/maremma
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Methods:
      - GET, POST, PATCH, PUT, DELETE, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - max-age=31536000
      Content-Type:
      - text/html; charset=UTF-8
      Date:
      - Fri, 27 Oct 2017 04:33:56 GMT
      Etag:
      - '"81db0465ef34ad7ee7c8c3647a32f0eb"'
      Last-Modified:
      - Mon, 23 Oct 2017 14:27:37 GMT
      Server:
      - openresty/1.11.2.2
      Via:
      - kong/0.10.3
      X-Amz-Id-2:
      - j4liaPBz9qiIumUnc+1z+X88bp13bgL9VFNad/VzrTdvCUWcBm2RT5fSQnD3M5CV06JbJKCHawY=
      X-Amz-Request-Id:
      - 31973EF14FBA5BA0
      X-Amz-Version-Id:
      - pjivd.7cZrpO8a1vFxOjEB7x.ToRhCvc
      X-Kong-Proxy-Latency:
      - '0'
      X-Kong-Upstream-Latency:
      - '25'
      Content-Length:
      - '23993'
      Connection:
      - keep-alive
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 27 Oct 2017 04:33:51 GMT
recorded_with: VCR 3.0.3
